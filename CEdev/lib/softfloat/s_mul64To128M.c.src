	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_softfloat_mul64To128M
_softfloat_mul64To128M:
	ld	hl, -45
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	iy, 32
	push	iy
	call	__llshru
	ld	(ix - 12), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	push	iy
	ld	hl, (ix + 15)
	ld	de, (ix + 18)
	ld	bc, (ix + 21)
	call	__llshru
	ld	(ix - 27), hl
	ld	(ix - 21), de
	ld	(ix - 24), bc
	pop	hl
	ld	iy, 0
	push	iy
	ld	hl, 255
	push	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__lland
	ld	(ix - 30), hl
	ld	(ix - 36), de
	ld	(ix - 33), bc
	pop	hl
	pop	hl
	pop	hl
	push	iy
	ld	hl, 255
	push	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 15)
	ld	de, (ix + 18)
	ld	bc, (ix + 21)
	call	__lland
	push	hl
	pop	iy
	ld	(ix - 42), iy
	ld	(ix - 39), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 33)
	push	hl
	ld	hl, (ix - 36)
	push	hl
	ld	hl, (ix - 30)
	push	hl
	lea	hl, iy
	push	de
	pop	iy
	ld	bc, (ix - 39)
	call	__llmulu
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	(ix - 3), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 42)
	lea	de, iy
	ld	bc, (ix - 39)
	call	__llmulu
	push	hl
	pop	iy
	ld	(ix - 42), de
	ld	(ix - 39), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 33)
	push	hl
	ld	hl, (ix - 36)
	push	hl
	ld	hl, (ix - 30)
	push	hl
	ld	hl, (ix - 27)
	ld	de, (ix - 21)
	ld	bc, (ix - 24)
	call	__llmulu
	ld	(ix - 30), hl
	ld	(ix - 33), bc
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 30)
	add	iy, bc
	ld	hl, (ix - 42)
	adc	hl, de
	ld	(ix - 30), hl
	ld	hl, (ix - 39)
	ld	de, (ix - 33)
	adc.sis	hl, de
	ld	(ix - 33), hl
	sbc	a, a
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 27)
	ld	de, (ix - 21)
	ld	bc, (ix - 24)
	call	__llmulu
	ld	(ix - 18), hl
	ld	(ix - 24), de
	ld	(ix - 27), bc
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	bit	0, a
	jr	nz, BB0_2
	or	a, a
	sbc	hl, hl
	jr	BB0_3
BB0_2:
	ld	hl, 256
BB0_3:
	ld	(ix - 21), hl
	bit	0, a
	ld	hl, 32
	push	hl
	lea	hl, iy
	ld	de, (ix - 30)
	ld	bc, (ix - 33)
	call	__llshru
	ld	(ix - 36), hl
	ld	(ix - 39), de
	ld	(ix - 42), bc
	pop	hl
	ld	hl, 32
	push	hl
	lea	hl, iy
	ld	de, (ix - 30)
	ld	bc, (ix - 33)
	call	__llshl
	ld	(ix - 12), hl
	ld	(ix - 15), de
	ld	(ix - 30), bc
	pop	hl
	ld	hl, (ix - 12)
	ld	de, (ix - 9)
	add	hl, de
	ld	(ix - 45), hl
	ld	hl, (ix - 15)
	ld	de, (ix - 6)
	adc	hl, de
	ld	(ix - 33), hl
	ld	l, c
	ld	h, b
	ld	de, (ix - 3)
	adc.sis	hl, de
	ld	bc, (ix + 24)
	push	bc
	pop	iy
	ld	de, (ix - 45)
	ld	(iy), de
	ld	bc, (ix - 33)
	ld	(iy + 3), bc
	ld	(iy + 6), l
	ld	(iy + 7), h
	ld	hl, (ix - 12)
	ld	bc, (ix - 9)
	add	hl, bc
	ld	hl, (ix - 15)
	ld	bc, (ix - 6)
	adc	hl, bc
	ld	hl, (ix - 30)
	ld	de, (ix - 3)
	adc.sis	hl, de
	ccf
	sbc	hl, hl
	inc	hl
	ld	(ix - 3), hl
	ld	hl, (ix - 27)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix - 36)
	ld	de, (ix - 39)
	ld	bc, (ix - 42)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld.sis	iy, 0
	push	iy
	ld	iy, (ix - 21)
	push	iy
	ld	iy, 0
	push	iy
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix + 24)
	ld	(iy + 8), hl
	ld	(iy + 11), de
	ld	(iy + 14), c
	ld	(iy + 15), b
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__lland
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__llshru
	extern	__lladd
	extern	__llshl
	extern	__llmulu
