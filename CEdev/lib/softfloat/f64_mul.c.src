	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___f64_mul
___f64_mul:
	ld	hl, -49
	call	__frameset
	ld	a, (ix + 6)
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	ld	iy, (ix + 15)
	ld	bc, 52
	push	bc
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ld	(ix - 19), hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix + 9)
	ld	de, (ix + 12)
	ld	c, iyl
	ld	b, iyh
	call	__lland
	ld	(ix - 46), hl
	ld	(ix - 49), de
	ld	(ix - 43), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 18)
	ld	de, (hl)
	ld	(ix - 25), de
	push	hl
	pop	iy
	ld	de, (iy + 3)
	ld	(ix - 28), de
	ld	bc, (iy + 6)
	ld	(ix - 31), bc
	ld	hl, 52
	push	hl
	ld	iy, (ix - 25)
	lea	hl, iy
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ld	(ix - 22), hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	lea	hl, iy
	ld	de, (ix - 28)
	ld	bc, (ix - 31)
	call	__lland
	ld	(ix - 37), hl
	ld	iyl, c
	ld	iyh, b
	pop	hl
	pop	hl
	pop	hl
	ld.sis	bc, 2047
	ld	hl, (ix - 19)
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 40), de
	ld	(ix - 34), iy
	jp	nz, BB0_6
	ld	hl, (ix - 46)
	ld	de, (ix - 49)
	ld	bc, (ix - 43)
	call	__llcmpzero
	ld	bc, (ix - 34)
	ld	iy, (ix - 22)
	jp	nz, BB0_8
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB0_4
	ld	hl, (ix - 37)
	ld	de, (ix - 40)
	ld	bc, (ix - 34)
	call	__llcmpzero
	ld	bc, (ix - 34)
	jp	nz, BB0_8
BB0_4:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, iyl
	ld	d, iyh
	push	hl
	push	hl
	push	de
	ld	hl, (ix - 37)
	ld	de, (ix - 40)
	call	__llor
	pop	iy
	pop	iy
	pop	iy
	call	__llcmpzero
	jp	nz, BB0_16
	ld	hl, ___fe_cur_env
	ld.sis	bc, -8
	set	4, (hl)
	or	a, a
	sbc	hl, hl
	jp	BB0_20
BB0_6:
	ld	iy, (ix - 22)
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB0_9
	ld	hl, (ix - 37)
	ld	de, (ix - 40)
	ld	bc, (ix - 34)
	call	__llcmpzero
	ld	iy, (ix - 19)
	ld	hl, (ix - 46)
	ld	(ix - 37), hl
	ld	hl, (ix - 49)
	ld	(ix - 40), hl
	ld	bc, (ix - 43)
	jp	z, BB0_4
BB0_8:
	ld	hl, (ix - 31)
	push	hl
	ld	hl, (ix - 28)
	push	hl
	ld	hl, (ix - 25)
	push	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	call	_softfloat_propagateNaNF64UI
	ld	iy, 18
	jp	BB0_30
BB0_9:
	ld	hl, (ix - 19)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB0_12
	ld	hl, (ix - 46)
	ld	de, (ix - 49)
	ld	bc, (ix - 43)
	call	__llcmpzero
	jp	z, BB0_14
	ld	hl, (ix - 43)
	push	hl
	ld	hl, (ix - 49)
	push	hl
	ld	hl, (ix - 46)
	push	hl
	pea	ix - 16
	call	_softfloat_normSubnormalF64Sig
	ld	iy, (ix - 22)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 16)
	ld	(ix - 19), hl
	ld	hl, (ix - 14)
	ld	(ix - 46), hl
	ld	hl, (ix - 11)
	ld	(ix - 49), hl
	ld	hl, (ix - 8)
	ld	(ix - 43), hl
BB0_12:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB0_22
	ld	hl, (ix - 37)
	ld	de, (ix - 40)
	ld	bc, (ix - 34)
	push	bc
	pop	iy
	call	__llcmpzero
	ld	a, (ix + 6)
	jr	nz, BB0_21
BB0_14:
	bit	0, a
	bit	0, a
	ld	hl, 0
	bit	0, a
	jr	nz, BB0_19
	ld.sis	bc, 0
	jr	BB0_20
BB0_16:
	bit	0, a
	bit	0, a
	bit	0, a
	ld	hl, 0
	jr	nz, BB0_18
	ld.sis	bc, 32752
	jr	BB0_20
BB0_18:
	ld.sis	bc, -16
	jr	BB0_20
BB0_19:
	ld.sis	bc, -32768
BB0_20:
	push	hl
	pop	de
	jp	BB0_31
BB0_21:
	push	iy
	ld	hl, (ix - 40)
	push	hl
	ld	hl, (ix - 37)
	push	hl
	pea	ix - 16
	call	_softfloat_normSubnormalF64Sig
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 16)
	ld	hl, (ix - 14)
	ld	(ix - 37), hl
	ld	hl, (ix - 11)
	ld	(ix - 40), hl
	ld	hl, (ix - 8)
	ld	(ix - 34), hl
BB0_22:
	ld	hl, (ix - 46)
	ld	de, (ix - 49)
	ld	bc, (ix - 19)
	add.sis	iy, bc
	ld	(ix - 22), iy
	ld	bc, 10
	push	bc
	ld	bc, (ix - 43)
	call	__llshl
	pop	iy
	ld	iy, 16384
	push	iy
	ld	iy, 0
	push	iy
	push	iy
	call	__llor
	ld	(ix - 19), hl
	ld	(ix - 25), de
	ld	(ix - 28), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 11
	push	hl
	ld	hl, (ix - 37)
	ld	de, (ix - 40)
	ld	bc, (ix - 34)
	call	__llshl
	pop	iy
	ld	iy, -32768
	push	iy
	ld	iy, 0
	push	iy
	push	iy
	call	__llor
	pop	iy
	pop	iy
	pop	iy
	pea	ix - 16
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 28)
	push	hl
	ld	hl, (ix - 25)
	push	hl
	ld	hl, (ix - 19)
	push	hl
	call	_softfloat_mul64To128M
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 4)
	ld	de, 0
	ld	e, (ix - 1)
	ld.sis	bc, 0
	ld	iy, 32
	push	iy
	call	__llshl
	ld	(ix - 19), hl
	ld	(ix - 25), de
	pop	iy
	ld	de, (ix - 8)
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 5)
	ld	iy, 0
	push	iy
	push	hl
	push	de
	ld	hl, (ix - 19)
	ld	de, (ix - 25)
	call	__lladd
	ld	(ix - 19), hl
	ld	(ix - 25), de
	ld	(ix - 28), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 12)
	ld	e, (ix - 9)
	call	__lcmpzero
	ld	c, 1
	ld	a, iyh
	ld	d, c
	jr	nz, BB0_24
	ld	d, a
BB0_24:
	ld	hl, (ix - 16)
	ld	e, (ix - 13)
	call	__lcmpzero
	jr	nz, BB0_26
	ld	c, a
BB0_26:
	rrc	d
	sbc	a, a
	ld	l, a
	rrc	c
	sbc	a, a
	ld	e, a
	ld	a, l
	or	a, e
	ld	l, a
	ld	de, 1
	ld	bc, 0
	push	bc
	push	bc
	push	de
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 19)
	ld	de, (ix - 25)
	ld	bc, (ix - 28)
	call	__llor
	push	de
	pop	iy
	pop	de
	pop	de
	pop	de
	ld	de, 16384
	push	de
	ld	de, 0
	push	de
	push	de
	lea	de, iy
	ld	(ix - 19), bc
	call	__llcmpu
	pop	de
	pop	de
	pop	de
	ccf
	sbc	a, a
	inc	a
	lea	bc, iy
	bit	0, a
	jr	nz, BB0_28
	ld.sis	de, -1023
	jr	BB0_29
BB0_28:
	ld.sis	de, -1024
BB0_29:
	ld	iy, (ix - 22)
	add.sis	iy, de
	ld	(ix - 22), iy
	and	a, 1
	ld	de, 0
	ld	e, a
	push	de
	push	bc
	pop	de
	ld	bc, (ix - 19)
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 22)
	push	hl
	ld	l, (ix + 6)
	push	hl
	call	_softfloat_roundPackToF64
	ld	iy, 15
BB0_30:
	add	iy, sp
	ld	sp, iy
BB0_31:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__llcmpu
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__llshru
	extern	_softfloat_propagateNaNF64UI
	extern	__lcmpzero
	extern	__lladd
	extern	_softfloat_roundPackToF64
	extern	_softfloat_normSubnormalF64Sig
	extern	__llor
	extern	__llshl
	extern	__llcmpzero
	extern	__sand
	extern	__lland
	extern	___fe_cur_env
	extern	_softfloat_mul64To128M
