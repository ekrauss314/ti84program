	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_softfloat_roundPackToF64
_softfloat_roundPackToF64:
	ld	hl, -21
	call	__frameset
	ld	bc, (ix + 9)
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
	ld	hl, (ix + 15)
	ld	(ix - 9), hl
	ld	hl, (ix + 18)
	ld	(ix - 12), hl
	ld.sis	hl, 0
	ld	(ix - 3), hl
	ld	iy, 0
	ld.sis	de, 2045
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	jp	c, BB0_3
	ld.sis	de, 0
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB0_23
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, c
	call	__ineg
	ld	de, 0
	push	de
	push	hl
	ld	hl, (ix + 18)
	push	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_softfloat_shiftRightJam64
	ld	iy, 0
	ld	(ix - 6), hl
	ld	(ix - 9), de
	ld	(ix - 12), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 0
	ld	(ix - 18), hl
	jr	BB0_4
BB0_3:
	ld	(ix - 18), bc
BB0_4:
	ld.sis	bc, 1023
	ld	de, (ix - 6)
	ld	l, e
	ld	h, d
	call	__sand
	ld	(ix - 15), hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	ld	hl, 512
	push	hl
	ex	de, hl
	ld	de, (ix - 9)
	ld	bc, (ix - 12)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 10
	push	iy
	call	__llshru
	push	hl
	pop	iy
	ld	(ix - 6), de
	pop	hl
	ld	hl, (ix - 15)
	ld	e, l
	ld	d, h
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jr	z, BB0_6
	ld	hl, ___fe_cur_env
	set	5, (hl)
BB0_6:
	ld	l, e
	ld	h, d
	ld.sis	de, 512
	or	a, a
	sbc.sis	hl, de
	ld	(ix - 9), bc
	jr	z, BB0_8
	ld	hl, 0
	jr	BB0_9
BB0_8:
	ld	hl, 1
BB0_9:
	ld	de, 0
	ld.sis	bc, 0
	call	__llnot
	push	bc
	push	de
	push	hl
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 12), de
	ld	(ix - 15), bc
	call	__llcmpzero
	jr	z, BB0_11
	ld	a, 0
	jr	BB0_12
BB0_11:
	ld	a, 1
BB0_12:
	ld	e, (ix + 6)
	ld	bc, (ix - 18)
	bit	0, e
	bit	0, e
	ld	iy, 52
	bit	0, e
	ld	(ix - 9), hl
	jp	nz, BB0_14
	ld.sis	hl, 0
	jr	BB0_15
BB0_14:
	ld.sis	hl, -32768
BB0_15:
	ld	(ix - 21), hl
	ld	de, 0
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	h, b
	push	iy
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	bit	0, a
	ld	iy, 0
	ld	(ix - 6), iy
	jr	nz, BB0_17
	ld	(ix - 6), hl
BB0_17:
	bit	0, a
	lea	hl, iy
	jr	nz, BB0_19
	ex	de, hl
BB0_19:
	ld	(ix - 18), hl
	bit	0, a
	jr	nz, BB0_21
	ld	l, c
	ld	h, b
	ld	(ix - 3), hl
BB0_21:
	ld	hl, (ix - 21)
	push	hl
	push	iy
	push	iy
	ld	hl, (ix - 9)
	ld	de, (ix - 12)
	ld	bc, (ix - 15)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 3)
	push	iy
	ld	iy, (ix - 18)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
BB0_22:
	ld	sp, ix
	pop	ix
	ret
BB0_23:
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	ld	hl, 512
	push	hl
	ld	hl, (ix + 12)
	ld	de, (ix + 15)
	ld	bc, (ix + 18)
	call	__lladd
	push	hl
	pop	iy
	ld	(ix - 15), de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 9)
	ld.sis	de, 2046
	or	a, a
	sbc.sis	hl, de
	jr	nc, BB0_25
	lea	hl, iy
	ld	de, (ix - 15)
	call	__llcmpzero
	jp	p, BB0_29
BB0_25:
	ld	a, (___fe_cur_env)
	or	a, 40
	ld	(___fe_cur_env), a
	ld	a, (ix + 6)
	bit	0, a
	bit	0, a
	ld	hl, 0
	bit	0, a
	jr	nz, BB0_27
	ld.sis	bc, 32752
	jr	BB0_28
BB0_27:
	ld.sis	bc, -16
BB0_28:
	push	hl
	pop	de
	jp	BB0_22
BB0_29:
	ld.sis	hl, 2045
	ld	(ix - 18), hl
	ld	iy, 0
	jp	BB0_4
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__setflag
	extern	__lland
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__llshru
	extern	__lladd
	extern	__llshl
	extern	__ineg
	extern	__llcmpzero
	extern	__sand
	extern	_softfloat_shiftRightJam64
	extern	__llnot
	extern	___fe_cur_env
