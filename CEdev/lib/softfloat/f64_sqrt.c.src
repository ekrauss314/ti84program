	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___f64_sqrt
___f64_sqrt:
	ld	hl, -43
	call	__frameset
	ld	bc, 52
	ld	a, (ix + 14)
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	(ix - 13), de
	ld	iy, (ix + 12)
	push	bc
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ld	(ix - 16), hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix + 6)
	ld	(ix - 19), hl
	ld	hl, (ix + 6)
	ld	de, (ix - 13)
	ld	(ix - 25), iy
	ld	c, iyl
	ld	b, iyh
	call	__lland
	push	hl
	pop	iy
	ld	(ix - 22), de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 16)
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB0_3
	lea	hl, iy
	ld	de, (ix - 22)
	call	__llcmpzero
	jp	nz, BB0_9
	bit	0, a
	jp	BB0_11
BB0_3:
	ld	(ix - 28), iy
	ld	de, (ix - 22)
	ld	(ix - 31), bc
	bit	0, a
	jp	nz, BB0_10
	ld	hl, (ix - 16)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	hl, (ix - 28)
	jp	nz, BB0_7
	ld	bc, (ix - 31)
	call	__llcmpzero
	ld	bc, (ix - 25)
	ld	iy, (ix - 13)
	jp	z, BB0_25
	ld	bc, (ix - 31)
	push	bc
	push	de
	push	hl
	pea	ix - 10
	call	_softfloat_normSubnormalF64Sig
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 10)
	ld	(ix - 16), hl
	ld	hl, (ix - 8)
	ld	(ix - 28), hl
	ld	de, (ix - 5)
	ld	hl, (ix - 2)
	ld	(ix - 31), hl
BB0_7:
	ld	bc, 130049
	ld	iy, (ix - 16)
	ld	a, iyh
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	add	hl, bc
	call	__ishru
	ld.sis	bc, 1022
	add.sis	hl, bc
	ld	(ix - 43), hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 1
	call	__sand
	ld	(ix - 16), hl
	ld	hl, 16
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 28)
	ld	bc, (ix - 31)
	call	__llor
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 21
	push	iy
	ld	(ix - 31), hl
	ld	(ix - 34), de
	ld	(ix - 37), bc
	call	__llshru
	push	hl
	pop	iy
	ld	(ix - 25), iy
	ld	(ix - 22), de
	ld	(ix - 19), bc
	pop	hl
	ld	l, e
	ld	de, 0
	ld	bc, (ix - 16)
	ld	e, c
	ld	d, b
	push	hl
	push	iy
	push	de
	call	_softfloat_approxRecipSqrt32_1
	ld	(ix - 13), hl
	ld	a, e
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 255
	push	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 25)
	ld	de, (ix - 22)
	ld	bc, (ix - 19)
	call	__lland
	ld	(ix - 19), hl
	pop	iy
	pop	iy
	pop	iy
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	iy, 0
	push	iy
	ld	(ix - 28), hl
	push	hl
	ld	iy, (ix - 13)
	push	iy
	ld	hl, (ix - 19)
	call	__llmulu
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 32
	push	iy
	call	__llshru
	ld	(ix - 19), hl
	pop	hl
	ld	iyl, e
	ld	hl, (ix - 16)
	ld	a, l
	xor	a, 1
	ld	d, a
	xor	a, 1
	ld	l, a
	ld	bc, 1
	xor	a, a
	call	__land
	ld	bc, (ix - 19)
	ld	a, iyl
	call	__lshru
	bit	0, d
	ld	(ix - 16), bc
	jp	nz, BB0_13
	ld	iy, 8
	jp	BB0_14
BB0_9:
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	push	hl
	ld	hl, (ix - 25)
	push	hl
	ld	hl, (ix - 13)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_softfloat_propagateNaNF64UI
	ld	(ix - 19), hl
	push	de
	pop	iy
	pop	hl
	jp	BB0_24
BB0_10:
	ld	iy, 0
	lea	hl, iy
	ld	bc, (ix - 16)
	ld	l, c
	ld	h, b
	push	iy
	push	iy
	push	hl
	ld	hl, (ix - 28)
	ld	bc, (ix - 31)
	call	__llor
	pop	iy
	pop	iy
	pop	iy
	call	__llcmpzero
BB0_11:
	ld	bc, (ix - 25)
	ld	iy, (ix - 13)
	jp	z, BB0_25
	ld	hl, ___fe_cur_env
	ld.sis	bc, -8
	set	4, (hl)
	ld	iy, 0
	ld	(ix - 19), iy
	jp	BB0_25
BB0_13:
	ld	iy, 9
BB0_14:
	ld	hl, (ix - 31)
	ld	de, (ix - 34)
	ld	bc, (ix - 37)
	push	iy
	call	__llshl
	ld	(ix - 19), hl
	ld	(ix - 22), de
	ld	(ix - 25), bc
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	ld	(ix - 31), de
	push	hl
	push	de
	ld	hl, (ix - 16)
	push	hl
	ld.sis	bc, 0
	call	__llmulu
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 19)
	ld	de, (ix - 22)
	ld	bc, (ix - 25)
	call	__llsub
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 2
	push	iy
	call	__llshru
	pop	iy
	ld	iy, 0
	push	iy
	ld	iy, 255
	push	iy
	ld	iy, -1
	push	iy
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	ld	iy, (ix - 28)
	push	iy
	ld	iy, (ix - 13)
	push	iy
	call	__llmulu
	ld	(ix - 34), hl
	ld	(ix - 37), de
	ld	(ix - 40), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 32
	push	hl
	ld	hl, (ix - 16)
	ld	de, (ix - 31)
	ld.sis	bc, 0
	call	__llshl
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 32
	push	iy
	call	__lladd
	ld	(ix - 13), hl
	ld	(ix - 16), de
	ld	(ix - 28), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 29
	push	hl
	ld	hl, (ix - 34)
	ld	de, (ix - 37)
	ld	bc, (ix - 40)
	call	__llshru
	pop	iy
	ld	iy, 0
	push	iy
	ld	iy, 2047
	push	iy
	ld	iy, -8
	push	iy
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 13)
	ld	de, (ix - 16)
	ld	bc, (ix - 28)
	call	__lladd
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 504
	push	hl
	ld	(ix - 13), iy
	lea	hl, iy
	ld	(ix - 28), de
	ld	(ix - 16), bc
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 34
	push	iy
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	jp	nc, BB0_18
	ld	hl, -64
	ld	de, -1
	push	de
	push	de
	push	hl
	ld	hl, (ix - 13)
	ld	de, (ix - 28)
	ld	iy, (ix - 16)
	ld	c, iyl
	ld	b, iyh
	call	__lland
	ld	(ix - 34), hl
	ld	(ix - 37), de
	ld	(ix - 40), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 6
	push	hl
	ld	hl, (ix - 13)
	ld	de, (ix - 28)
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	ld	(ix - 28), hl
	ld	(ix - 31), de
	ld	iyl, c
	ld	iyh, b
	pop	hl
	ld	hl, 52
	push	hl
	ld	hl, (ix - 19)
	ld	de, (ix - 22)
	ld	bc, (ix - 25)
	call	__llshl
	ld	(ix - 13), hl
	ld	(ix - 16), de
	ld	(ix - 19), bc
	pop	hl
	push	iy
	ld	de, (ix - 31)
	push	de
	ld	hl, (ix - 28)
	push	hl
	ld	c, iyl
	ld	b, iyh
	call	__llmulu
	pop	iy
	pop	iy
	pop	iy
	ld	(ix - 28), bc
	push	bc
	ld	(ix - 25), de
	push	de
	ld	(ix - 22), hl
	push	hl
	ld	hl, (ix - 13)
	ld	de, (ix - 16)
	ld	bc, (ix - 19)
	call	__llsub
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	de, -1
	push	de
	pop	hl
	push	de
	pop	iy
	ld.sis	bc, -1
	call	__llcmps
	pop	hl
	pop	hl
	pop	hl
	call	pe, __setflag
	jp	p, BB0_19
	ld	hl, (ix - 28)
	push	hl
	ld	hl, (ix - 25)
	push	hl
	ld	hl, (ix - 22)
	push	hl
	ld	hl, (ix - 13)
	ld	de, (ix - 16)
	ld	bc, (ix - 19)
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix - 40)
	ld	de, (ix - 37)
	jr	nz, BB0_20
	ld	hl, 0
	jr	BB0_21
BB0_18:
	ld	bc, (ix - 43)
	ld	de, 0
	ld	hl, (ix - 28)
	jp	BB0_23
BB0_19:
	scf
	sbc	hl, hl
	push	hl
	push	de
	push	de
	ld	hl, (ix - 34)
	ld	de, (ix - 37)
	ld	bc, (ix - 40)
	jr	BB0_22
BB0_20:
	ld	hl, 1
BB0_21:
	ld	iy, 0
	push	iy
	push	iy
	push	hl
	ld	hl, (ix - 34)
BB0_22:
	call	__lladd
	ld	(ix - 13), hl
	push	de
	pop	hl
	ld	(ix - 16), bc
	pop	de
	pop	de
	pop	de
	ld	bc, (ix - 43)
	ld	de, 0
BB0_23:
	ld	iy, (ix - 16)
	push	iy
	push	hl
	ld	hl, (ix - 13)
	push	hl
	push	bc
	push	de
	call	_softfloat_roundPackToF64
	ld	(ix - 19), hl
	push	de
	pop	iy
BB0_24:
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB0_25:
	ld	hl, (ix - 19)
	lea	de, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__llcmpzero
	extern	_softfloat_approxRecipSqrt32_1
	extern	__llsub
	extern	__sand
	extern	__ishru
	extern	__setflag
	extern	__llcmps
	extern	__llcmpu
	extern	__Unwind_SjLj_Unregister
	extern	__llshru
	extern	_softfloat_propagateNaNF64UI
	extern	__lladd
	extern	_softfloat_roundPackToF64
	extern	_softfloat_normSubnormalF64Sig
	extern	__llor
	extern	__land
	extern	__llshl
	extern	__llmulu
	extern	__lshru
	extern	__lland
	extern	___fe_cur_env
