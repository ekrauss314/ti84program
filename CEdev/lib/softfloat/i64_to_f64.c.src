	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___i64_to_f64
___i64_to_f64:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	iy, -1
	ld	hl, 32767
	push	hl
	push	iy
	push	iy
	ld	hl, (ix + 6)
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	call	__llcmpzero
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	jp	nz, BB0_3
	ld	bc, (ix + 12)
	call	__llcmpzero
	jp	m, BB0_5
	ld	a, 0
	jr	BB0_6
BB0_3:
	push	de
	pop	iy
	ld	bc, (ix + 12)
	call	__llcmpzero
	jp	m, BB0_8
	ld	a, 0
	jr	BB0_9
BB0_5:
	ld	a, 1
BB0_6:
	or	a, a
	sbc	hl, hl
	bit	0, a
	bit	0, a
	bit	0, a
	jp	nz, BB0_10
	ld.sis	bc, 0
	jp	BB0_11
BB0_8:
	ld	a, 1
BB0_9:
	ld	hl, 63
	push	hl
	ld	hl, (ix + 6)
	lea	de, iy
	call	__llshrs
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llxor
	pop	iy
	pop	iy
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, 1084
	push	hl
	rrc	a
	sbc	hl, hl
	push	hl
	call	_softfloat_normRoundPackToF64
	ld	iy, 15
	add	iy, sp
	ld	sp, iy
	jr	BB0_12
BB0_10:
	ld.sis	bc, -15392
BB0_11:
	push	hl
	pop	de
BB0_12:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	_softfloat_normRoundPackToF64
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__llshrs
	extern	__lladd
	extern	__llcmpzero
	extern	__llxor
	extern	__lland
