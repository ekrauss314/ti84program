	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_softfloat_roundMToI64
_softfloat_roundMToI64:
	ld	hl, -23
	call	__frameset
	ld	iy, (ix + 9)
	ld.sis	bc, 0
	ld	a, 16
	ld	(ix - 17), a
	ld	hl, (iy + 8)
	ld	de, 0
	ld	e, (iy + 11)
	ld	iy, 32
	push	iy
	ld	(ix - 16), bc
	call	__llshl
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 9), bc
	pop	iy
	ld	iy, (ix + 9)
	ld	bc, (iy + 4)
	or	a, a
	sbc	hl, hl
	ld	l, (iy + 7)
	ld	de, 0
	push	de
	push	hl
	push	bc
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	bc, (ix - 9)
	call	__lladd
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	(ix - 3), bc
	ld	c, (ix + 12)
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (iy)
	ld	e, (iy + 3)
	ld	a, c
	or	a, a
	ld	(ix - 12), hl
	ld	(ix - 13), e
	jr	z, BB0_2
	ld	a, c
	cp	a, 4
	jr	nz, BB0_5
BB0_2:
	call	__lcmpzero
	jp	p, BB0_20
BB0_3:
	ld	de, 1
	ld	iy, (ix - 9)
	add	iy, de
	ld	hl, (ix - 6)
	ld	bc, 0
	adc	hl, bc
	ld	(ix - 20), hl
	ld	hl, (ix - 3)
	dec.sis	de
	adc.sis	hl, de
	ld	(ix - 9), hl
	jr	nc, BB0_8
	push	bc
	pop	de
	jp	BB0_32
BB0_5:
	call	__lcmpzero
	jp	z, BB0_20
	ld	a, c
	bit	0, (ix + 6)
	jp	z, BB0_19
	cp	a, 2
	jr	z, BB0_3
	jp	BB0_20
BB0_8:
	ld	a, -128
	ld	hl, (ix - 12)
	ld	e, (ix - 13)
	call	__lcmpu
	ld	l, 0
	jr	z, BB0_10
	ld	e, l
	jr	BB0_11
BB0_10:
	ld	e, 1
BB0_11:
	ld	bc, -2
	ld	a, (ix + 12)
	or	a, a
	jr	nz, BB0_13
	ld	l, -1
BB0_13:
	rrc	e
	sbc	a, a
	ld	e, a
	ld	a, l
	and	a, e
	scf
	sbc	hl, hl
	push	hl
	push	hl
	push	bc
	lea	hl, iy
	ld	de, (ix - 20)
	ld	bc, (ix - 9)
	call	__lland
	ld	(ix - 23), hl
	ld	(ix - 6), de
	ld	(ix - 3), bc
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	jr	nz, BB0_15
	ld	(ix - 23), iy
BB0_15:
	bit	0, a
	jr	nz, BB0_17
	ld	hl, (ix - 20)
	ld	(ix - 6), hl
BB0_17:
	bit	0, a
	ld	iy, (ix - 23)
	jr	nz, BB0_21
	ld	hl, (ix - 9)
	ld	(ix - 3), hl
	jr	BB0_21
BB0_19:
	cp	a, 3
	jp	z, BB0_3
BB0_20:
	ld	iy, (ix - 9)
BB0_21:
	ld	a, (ix + 6)
	lea	hl, iy
	ld	de, (ix - 6)
	ld	bc, (ix - 3)
	call	__llneg
	bit	0, a
	jr	nz, BB0_23
	lea	hl, iy
BB0_23:
	bit	0, a
	jr	nz, BB0_25
	ld	de, (ix - 6)
BB0_25:
	bit	0, a
	jr	nz, BB0_27
	ld	bc, (ix - 3)
BB0_27:
	ld	(ix - 6), de
	ld	(ix - 3), hl
	ld	iyl, c
	ld	iyh, b
	call	__llcmpzero
	jr	z, BB0_29
	ld	hl, 63
	push	hl
	ld	hl, (ix - 3)
	ld	de, (ix - 6)
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	ld	bc, 0
	pop	de
	ld	e, a
	ld	a, l
	and	a, 1
	ld	l, a
	ld	a, e
	and	a, 1
	ld	e, a
	ld	a, l
	cp	a, e
	push	bc
	pop	de
	jr	nz, BB0_32
BB0_29:
	ld	bc, (ix - 3)
	ld	hl, (ix - 12)
	ld	e, (ix - 13)
	call	__lcmpzero
	jr	z, BB0_33
	bit	0, (ix + 15)
	jr	z, BB0_33
	ld	a, 32
	ld	(ix - 17), a
	ld	de, (ix - 6)
	ld	(ix - 16), iy
BB0_32:
	ld	a, (___fe_cur_env)
	or	a, (ix - 17)
	ld	(___fe_cur_env), a
	push	bc
	pop	hl
	ld	bc, (ix - 16)
	jr	BB0_34
BB0_33:
	push	bc
	pop	hl
	ld	de, (ix - 6)
	ld	c, iyl
	ld	b, iyh
BB0_34:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__llneg
	extern	__frameset
	extern	__llshru
	extern	__lladd
	extern	__lcmpzero
	extern	__llshl
	extern	__llcmpzero
	extern	__lcmpu
	extern	__lland
	extern	___fe_cur_env
