	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___f64_to_f32
___f64_to_f32:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	iy, 52
	ld	a, -128
	push	iy
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__lland
	ld	(ix - 6), hl
	ld	(ix - 9), de
	pop	hl
	pop	hl
	pop	hl
	ld	(ix - 3), iy
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB0_3
	ld	hl, (ix - 6)
	ld	de, (ix - 9)
	call	__llcmpzero
	jp	nz, BB0_5
	ld	iy, -8388608
	ld	hl, 32
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	bc
	ld	bc, 0
	call	__land
	lea	bc, iy
	jp	BB0_8
BB0_3:
	ld	hl, 22
	push	hl
	push	bc
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_softfloat_shortShiftRightJam64
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	d, e
	ld	bc, 0
	ld	hl, (ix - 3)
	ld	c, l
	ld	b, h
	xor	a, a
	ld	(ix - 6), iy
	lea	hl, iy
	ld	e, d
	call	__lor
	call	__lcmpzero
	jp	nz, BB0_9
	ld	hl, 32
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	bc
	ld	bc, 0
	ld	a, -128
	call	__land
	jp	BB0_13
BB0_5:
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_softfloat_isSigNaNF64UI
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	jr	z, BB0_7
	ld	hl, ___fe_cur_env
	set	4, (hl)
BB0_7:
	ld	hl, 32
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	bc
	ld	bc, 0
	ld	a, -128
	call	__land
	push	hl
	pop	iy
	ld	(ix - 3), e
	ld	hl, 29
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	bc
	ld	bc, 4194303
	xor	a, a
	call	__land
	lea	bc, iy
	ld	a, (ix - 3)
	call	__ladd
	ld	bc, -4194304
BB0_8:
	ld	a, 127
	call	__ladd
	jp	BB0_13
BB0_9:
	ld	iyl, d
	ld	a, 64
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llcmpzero
	jp	m, BB0_11
	ld	iyh, 0
	jr	BB0_12
BB0_11:
	ld	iyh, 1
BB0_12:
	ld	bc, 0
	ld	hl, (ix - 3)
	ld.sis	de, -897
	add.sis	hl, de
	ld	(ix - 3), hl
	ld	hl, (ix - 6)
	ld	e, iyl
	call	__lor
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	a, iyh
	rrc	a
	sbc	hl, hl
	push	hl
	call	_softfloat_roundPackToF32
	pop	bc
	pop	bc
	pop	bc
	pop	bc
BB0_13:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	_softfloat_shortShiftRightJam64
	extern	__Unwind_SjLj_Register
	extern	__lor
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__llshru
	extern	__lcmpzero
	extern	__land
	extern	_softfloat_roundPackToF32
	extern	__llcmpzero
	extern	__sand
	extern	__lland
	extern	_softfloat_isSigNaNF64UI
	extern	___fe_cur_env
	extern	__ladd
