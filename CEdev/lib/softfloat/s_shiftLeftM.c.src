	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_softfloat_shiftLeftM
_softfloat_shiftLeftM:
	ld	hl, -9
	call	__frameset
	ld	bc, (ix + 12)
	ld	iy, (ix + 18)
	ld	d, 0
	ld	l, 5
	ld	a, (ix + 15)
	call	__lshru
	push	bc
	pop	hl
	ld	bc, 0
	ld	c, (ix + 6)
	ld	(ix - 3), hl
	ld	e, a
	ld	a, d
	call	__lcmpu
	jp	nc, BB0_7
	ld	c, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	ld	a, l
	and	a, 31
	ld	e, a
	or	a, a
	jr	nz, BB0_5
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	a, c
	ld	de, (ix - 3)
	sbc	hl, de
	dec	hl
	ld	c, 2
	call	__ishl
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	ld	l, a
	dec	hl
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	lea	bc, iy
	ld	hl, (ix - 3)
	ld	a, l
	sub	a, (ix + 6)
	ld	l, a
BB0_3:
	ld	a, l
	or	a, a
	jr	z, BB0_6
	ld	iy, (ix - 6)
	ld	de, (iy)
	ld	(ix - 9), de
	ld	a, (iy + 3)
	lea	de, iy
	push	bc
	pop	iy
	ld	bc, (ix - 9)
	ld	(iy), bc
	ld	(iy + 3), a
	lea	bc, iy
	push	de
	pop	iy
	lea	iy, iy - 4
	ld	(ix - 6), iy
	push	bc
	pop	iy
	lea	iy, iy - 4
	lea	bc, iy
	inc	l
	jr	BB0_3
BB0_5:
	ld	a, c
	ld	hl, (ix - 3)
	sub	a, l
	ld	iyl, a
	ld	c, 2
	call	__ishl
	push	hl
	pop	bc
	ld	hl, (ix + 18)
	add	hl, bc
	push	hl
	push	de
	ld	hl, (ix + 9)
	push	hl
	push	iy
	call	_softfloat_shortShiftLeftM
	ld	iy, (ix + 18)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	ld	bc, 32
	xor	a, a
	call	__lcmpu
	ld	bc, (ix - 3)
	jr	nc, BB0_7
	jr	BB0_8
BB0_6:
	ld	bc, (ix - 3)
	ld	iy, (ix + 18)
BB0_7:
	ld	a, 2
	push	bc
	pop	hl
	ld	c, a
	call	__ishl
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	call	_memset
	pop	hl
	pop	hl
	pop	hl
BB0_8:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	_memset
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	_softfloat_shortShiftLeftM
	extern	__lcmpu
	extern	__lshru
	extern	__ishl
