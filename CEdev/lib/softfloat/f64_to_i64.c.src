	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	___f64_to_i64
___f64_to_i64:
	ld	hl, -27
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	iy, 52
	push	iy
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__lland
	ld	(ix - 18), hl
	ld	(ix - 15), de
	pop	hl
	pop	hl
	pop	hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 27), iy
	jr	z, BB0_2
	ld	a, 0
	jr	BB0_3
BB0_2:
	ld	a, -1
BB0_3:
	ld	de, 0
	ld	hl, 16
	push	hl
	push	de
	push	de
	ld	hl, (ix - 18)
	ld	de, (ix - 15)
	ld	(ix - 24), bc
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	bit	0, a
	jr	nz, BB0_5
	ld	(ix - 18), hl
BB0_5:
	bit	0, a
	jr	nz, BB0_7
	ld	(ix - 15), de
BB0_7:
	ld.sis	hl, -1075
	bit	0, a
	jr	nz, BB0_9
	ld	(ix - 24), bc
BB0_9:
	lea	de, ix - 12
	ld	(ix - 21), de
	ld	de, (ix - 27)
	ld	iyl, e
	ld	iyh, d
	ld	c, l
	ld	b, h
	add.sis	iy, bc
	or	a, a
	sbc	hl, hl
	ld	(ix - 12), hl
	ld	(ix - 9), h
	ld.sis	bc, 1075
	ld	l, e
	ld	h, d
	sbc.sis	hl, bc
	jr	c, BB0_12
	ld	hl, (ix - 21)
	ld.sis	bc, 1087
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jr	c, BB0_13
	ld.sis	bc, 0
	ld	hl, ___fe_cur_env
	set	4, (hl)
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	jp	BB0_18
BB0_12:
	ld.sis	hl, 1075
	or	a, a
	sbc.sis	hl, de
	ld	de, (ix - 18)
	ld	(ix - 8), de
	ld	de, (ix - 15)
	ld	(ix - 5), de
	ld	de, (ix - 24)
	ld	(ix - 2), e
	ld	(ix - 1), d
	ld	de, 0
	ld	bc, (ix - 21)
	push	bc
	push	de
	ld	e, l
	ld	d, h
	push	de
	push	bc
	ld	hl, 3
	push	hl
	call	_softfloat_shiftRightJamM
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	jr	BB0_14
BB0_13:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	push	hl
	ld	hl, (ix - 18)
	ld	de, (ix - 15)
	ld	bc, (ix - 24)
	call	__llshl
	pop	iy
	ld	(ix - 8), hl
	ld	(ix - 5), de
	ld	(ix - 2), c
	ld	(ix - 1), b
BB0_14:
	ld	a, (ix + 15)
	ld	l, (ix + 18)
	ex	de, hl
	ld	iyl, e
	ex	de, hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llcmpzero
	jp	m, BB0_16
	ld	l, 0
	jr	BB0_17
BB0_16:
	ld	l, 1
BB0_17:
	ld	bc, (ix - 21)
	ld	e, iyl
	push	de
	ld	e, a
	push	de
	push	bc
	rrc	l
	sbc	hl, hl
	push	hl
	call	_softfloat_roundMToI64
	pop	iy
	pop	iy
	pop	iy
	pop	iy
BB0_18:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	_softfloat_shiftRightJamM
	extern	__frameset
	extern	__llshru
	extern	__lladd
	extern	__llshl
	extern	__llcmpzero
	extern	_softfloat_roundMToI64
	extern	__sand
	extern	__lland
	extern	___fe_cur_env
