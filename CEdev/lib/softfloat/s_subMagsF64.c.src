	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_softfloat_subMagsF64
_softfloat_subMagsF64:
	ld	hl, -51
	call	__frameset
	ld	hl, (ix + 6)
	ld	iy, (ix + 15)
	ld	a, (ix + 18)
	ld	bc, 52
	ld	de, (iy)
	ld	(ix - 15), de
	ld	de, (iy + 3)
	ld	(ix - 3), de
	ld	de, (iy + 6)
	ld	(ix - 6), de
	push	bc
	push	bc
	pop	iy
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ld	(ix - 12), hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	call	__lland
	ld	(ix - 18), hl
	ld	(ix - 21), de
	ld	(ix - 27), bc
	pop	hl
	pop	hl
	pop	hl
	push	iy
	ld	iy, (ix - 15)
	lea	hl, iy
	ld	de, (ix - 3)
	ld	bc, (ix - 6)
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ld	(ix - 9), hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	lea	hl, iy
	ld	de, (ix - 3)
	ld	bc, (ix - 6)
	call	__lland
	ld	(ix - 24), hl
	ld	(ix - 30), de
	ld	iyl, c
	ld	iyh, b
	ld	de, (ix - 12)
	pop	hl
	pop	hl
	pop	hl
	ld	l, e
	ld	h, d
	ld	bc, (ix - 9)
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 33), hl
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB0_4
	lea	bc, iy
	ld	iy, (ix - 18)
	ld	l, e
	ld	h, d
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB0_9
	ld	hl, (ix - 27)
	push	hl
	ld	hl, (ix - 21)
	push	hl
	push	iy
	ld	hl, (ix - 24)
	ld	de, (ix - 30)
	call	__llor
	pop	iy
	pop	iy
	pop	iy
	call	__llcmpzero
	jp	nz, BB0_14
	ld	hl, ___fe_cur_env
	ld.sis	iy, -8
	set	4, (hl)
	or	a, a
	sbc	hl, hl
	jp	BB0_50
BB0_4:
	ld	hl, 10
	push	hl
	ld	hl, (ix - 18)
	ld	de, (ix - 21)
	ld	bc, (ix - 27)
	call	__llshl
	ld	(ix - 48), hl
	ld	(ix - 45), de
	ld	(ix - 51), bc
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, (ix - 24)
	ld	de, (ix - 30)
	ld	c, iyl
	ld	b, iyh
	call	__llshl
	ld	(ix - 36), hl
	ld	(ix - 39), de
	pop	hl
	ld.sis	de, 0
	ld	hl, (ix - 33)
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	(ix - 42), bc
	jp	p, BB0_11
	ld	de, (ix - 24)
	ld	hl, (ix - 9)
	ld.sis	bc, 2047
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB0_15
	ex	de, hl
	ld	de, (ix - 30)
	ld	c, iyl
	ld	b, iyh
	call	__llcmpzero
	jp	nz, BB0_14
	bit	0, a
	bit	0, a
	ld	hl, 0
	bit	0, a
	jp	nz, BB0_49
	ld.sis	iy, -16
	jp	BB0_50
BB0_9:
	push	bc
	ld	hl, (ix - 30)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	lea	hl, iy
	ld	de, (ix - 21)
	ld	bc, (ix - 27)
	call	__llsub
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy
	call	__llcmpzero
	ld	hl, 0
	jp	nz, BB0_17
	push	hl
	pop	de
	ld.sis	iy, 0
	jp	BB0_51
BB0_11:
	ld	iy, (ix - 21)
	ld	de, (ix - 18)
	ld.sis	bc, 2047
	ld	hl, (ix - 12)
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB0_21
	ex	de, hl
	lea	de, iy
	ld	bc, (ix - 27)
	call	__llcmpzero
	jr	nz, BB0_14
	ld	hl, (ix + 6)
	ld	iy, (ix + 12)
	ld	de, (ix + 9)
	jp	BB0_51
BB0_14:
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_softfloat_propagateNaNF64UI
	ld	iyl, c
	ld	iyh, b
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	pop	bc
	jp	BB0_51
BB0_15:
	xor	a, 1
	ld	e, a
	ld	hl, (ix - 12)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 15), de
	jp	z, BB0_23
	ld	a, 0
	jp	BB0_24
BB0_17:
	ld	(ix - 3), bc
	ld	hl, (ix - 12)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld.sis	bc, 0
	ld	(ix - 6), bc
	jr	z, BB0_19
	dec.sis	hl
	ld	(ix - 6), hl
BB0_19:
	lea	hl, iy
	ld	bc, (ix - 3)
	call	__llcmpzero
	jp	p, BB0_31
	xor	a, 1
	ld	(ix - 15), a
	call	__llneg
	jp	BB0_32
BB0_21:
	ld	hl, (ix - 9)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	z, BB0_38
	ld	a, 0
	jp	BB0_39
BB0_23:
	ld	a, -1
BB0_24:
	ld	iy, 0
	ld	de, (ix - 48)
	ld	hl, (ix - 51)
	ld	bc, (ix - 42)
	bit	0, a
	jr	nz, BB0_26
	lea	de, iy
BB0_26:
	ld	(ix - 3), de
	bit	0, a
	ld	de, (ix - 45)
	jr	nz, BB0_28
	lea	de, iy
BB0_28:
	bit	0, a
	ld	c, l
	ld	b, h
	jr	nz, BB0_30
	ld.sis	bc, 16384
BB0_30:
	push	hl
	ld	iy, (ix - 45)
	push	iy
	ld	hl, (ix - 48)
	push	hl
	ld	hl, (ix - 3)
	call	__lladd
	ld	(ix - 3), hl
	ld	(ix - 6), de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 33)
	call	__sneg
	ld	e, l
	ld	d, h
	jp	BB0_46
BB0_31:
	ld	(ix - 15), a
BB0_32:
	ld	(ix - 9), hl
	ld	(ix - 12), de
	ld	(ix - 3), bc
	call	__llctlz
	add	a, -11
	ld	c, a
	rlc	a
	sbc	a, a
	ld	b, a
	ld	hl, (ix - 6)
	or	a, a
	sbc.sis	hl, bc
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld.sis	de, 0
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	hl, (ix - 6)
	ld	a, l
	jp	m, BB0_34
	ld	a, c
BB0_34:
	ld.sis	bc, 1
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	jp	p, BB0_36
	ld.sis	hl, 0
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
BB0_36:
	ld	l, (ix - 15)
	bit	0, l
	bit	0, l
	ld.sis	bc, 0
	bit	0, l
	jp	nz, BB0_47
	ld.sis	hl, 0
	jp	BB0_48
BB0_38:
	ld	a, -1
BB0_39:
	ld	iy, 0
	ld	bc, (ix - 36)
	ld	de, (ix - 39)
	ld	hl, (ix - 42)
	bit	0, a
	ld	(ix - 3), bc
	jr	nz, BB0_41
	ld	(ix - 3), iy
BB0_41:
	bit	0, a
	jr	nz, BB0_43
	lea	de, iy
BB0_43:
	bit	0, a
	push	hl
	pop	iy
	ld	c, iyl
	ld	b, iyh
	jr	nz, BB0_45
	ld.sis	bc, 16384
BB0_45:
	ld	l, (ix + 18)
	ld	(ix - 15), hl
	push	iy
	ld	iy, (ix - 39)
	push	iy
	ld	hl, (ix - 36)
	push	hl
	ld	hl, (ix - 3)
	call	__lladd
	ld	(ix - 3), hl
	ld	(ix - 6), de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 48)
	ld	(ix - 36), hl
	ld	hl, (ix - 45)
	ld	(ix - 39), hl
	ld	hl, (ix - 51)
	ld	(ix - 42), hl
	ld	hl, (ix - 12)
	ld	(ix - 9), hl
	ld	de, (ix - 33)
BB0_46:
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	iy, 0
	push	iy
	push	hl
	push	bc
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_softfloat_shiftRightJam64
	ld	(ix - 3), hl
	ld	(ix - 6), de
	ld	(ix - 12), bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 16384
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 36)
	ld	de, (ix - 39)
	ld	bc, (ix - 42)
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 12)
	push	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, (ix - 3)
	push	iy
	call	__llsub
	pop	iy
	pop	iy
	pop	iy
	ld	iy, (ix - 9)
	dec.sis	iy
	push	bc
	push	de
	push	hl
	push	iy
	ld	hl, (ix - 15)
	push	hl
	call	_softfloat_normRoundPackToF64
	push	de
	pop	iy
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	lea	de, iy
	push	bc
	pop	iy
	jp	BB0_51
BB0_47:
	ld.sis	hl, -32768
BB0_48:
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld	de, 52
	push	de
	ld	de, 0
	call	__llshl
	pop	iy
	ld	iy, (ix - 6)
	push	iy
	ld	iy, 0
	push	iy
	push	iy
	call	__lladd
	ld	(ix - 6), hl
	ld	(ix - 15), de
	ld	(ix - 18), bc
	pop	hl
	pop	hl
	pop	hl
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	dec	hl
	push	hl
	ex	de, hl
	push	bc
	pop	de
	call	__lland
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, (ix - 9)
	ld	de, (ix - 12)
	ld	bc, (ix - 3)
	call	__llshl
	pop	iy
	push	bc
	push	de
	push	hl
	ld	hl, (ix - 6)
	ld	de, (ix - 15)
	ld	bc, (ix - 18)
	call	__lladd
	ld	(ix - 3), de
	ld	iyl, c
	ld	iyh, b
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 3)
	jr	BB0_51
BB0_49:
	ld.sis	iy, 32752
BB0_50:
	push	hl
	pop	de
BB0_51:
	ld	c, iyl
	ld	b, iyh
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__llneg
	extern	__frameset
	extern	__llcmpzero
	extern	__llsub
	extern	__sand
	extern	__setflag
	extern	_softfloat_normRoundPackToF64
	extern	__sneg
	extern	__Unwind_SjLj_Unregister
	extern	__llshru
	extern	_softfloat_propagateNaNF64UI
	extern	__lladd
	extern	__llor
	extern	__llshl
	extern	__llctlz
	extern	__lland
	extern	_softfloat_shiftRightJam64
	extern	___fe_cur_env
