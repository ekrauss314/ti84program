	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__strtof_c
__strtof_c:
	ld	hl, -23
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	xor	a, a
	ld	(ix - 23), a
	ld	hl, -8388608
	ld	(ix - 21), hl
BB0_1:
	ld	hl, (ix - 3)
	ld	(ix - 6), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_isspace
	pop	de
	ld	de, (ix - 3)
	inc	de
	ld	(ix - 3), de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_1
	ld	hl, (ix - 6)
	ld	a, (hl)
	cp	a, 45
	ld	e, -1
	ld	c, 0
	ld	l, e
	jr	z, BB0_4
	ld	l, c
BB0_4:
	ld	(ix - 22), a
	cp	a, 43
	jr	z, BB0_6
	ld	e, c
BB0_6:
	ld	a, l
	or	a, e
	ld	l, a
	ld	bc, 1
	call	__iand
	push	hl
	pop	de
	or	a, a
	sbc	hl, hl
	ld	(ix - 9), hl
	xor	a, a
	ld	l, a
	ld	(ix - 6), hl
BB0_7:
	ld	iy, (ix - 3)
	add	iy, de
	ld	c, (iy - 1)
	ld	a, c
	add	a, -48
	cp	a, 10
	jr	nc, BB0_9
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	(ix - 15), de
	ld	de, -48
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 9)
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	de, (ix - 15)
	ld	(ix - 9), bc
	ld	l, a
	ld	(ix - 6), hl
	inc	de
	jr	BB0_7
BB0_9:
	ld	(ix - 12), iy
	ld	a, c
	cp	a, 46
	jr	nz, BB0_13
	ld	(ix - 15), de
	or	a, a
	sbc	hl, hl
	ex	de, hl
BB0_11:
	ld	hl, (ix - 3)
	add	hl, de
	ld	bc, (ix - 15)
	add	hl, bc
	ld	c, (hl)
	ld	a, c
	add	a, -48
	cp	a, 10
	ld	(ix - 18), de
	jr	nc, BB0_14
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	de, -48
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 9)
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	de, (ix - 18)
	ld	(ix - 9), bc
	ld	l, a
	ld	(ix - 6), hl
	inc	de
	jr	BB0_11
BB0_13:
	ld	de, (ix - 12)
	dec	de
	ld	(ix - 12), de
	ld	de, 0
	ld	(ix - 18), de
	jr	BB0_15
BB0_14:
	ld	hl, (ix - 12)
	add	hl, de
	ld	(ix - 12), hl
BB0_15:
	ld	de, (ix - 6)
	ld	iy, (ix - 9)
	ld	a, c
	cp	a, 69
	ld	(ix - 6), de
	jr	z, BB0_17
	ld	a, c
	cp	a, 101
	jr	nz, BB0_21
BB0_17:
	ld	(ix - 9), iy
	ld	iy, (ix - 12)
	ld	a, (iy + 1)
	cp	a, 43
	jr	nz, BB0_19
	lea	iy, iy + 2
	jr	BB0_23
BB0_19:
	cp	a, 45
	jr	nz, BB0_22
	ld	iy, (ix - 12)
	lea	iy, iy + 2
	ld	a, 1
	ld	(ix - 23), a
	jr	BB0_23
BB0_21:
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	hl, (ix + 9)
	jr	BB0_27
BB0_22:
	ld	iy, (ix - 12)
	inc	iy
BB0_23:
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
BB0_24:
	ld	l, (iy)
	ld	a, l
	add	a, -48
	cp	a, 10
	jr	nc, BB0_26
	ld	bc, 0
	ld	c, l
	ld	(ix - 12), bc
	ld	hl, (ix - 3)
	ld	bc, 10
	call	__imulu
	ld	bc, -48
	add	hl, bc
	ld	de, (ix - 6)
	ld	bc, (ix - 12)
	add	hl, bc
	ld	(ix - 3), hl
	inc	iy
	jr	BB0_24
BB0_26:
	ld	(ix - 12), iy
	ld	hl, (ix + 9)
	ld	iy, (ix - 9)
BB0_27:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_29
	ld	bc, (ix - 12)
	ld	(hl), bc
BB0_29:
	lea	hl, iy
	call	__lcmpzero
	jr	nz, BB0_31
	lea	hl, iy
	ld	iyl, e
	jp	BB0_48
BB0_31:
	ld	de, (ix - 3)
	push	de
	pop	hl
	call	__ineg
	bit	0, (ix - 23)
	jr	z, BB0_33
	ex	de, hl
BB0_33:
	ex	de, hl
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	push	de
	pop	bc
	call	pe, __setflag
	push	bc
	pop	hl
	jp	m, BB0_35
	or	a, a
	sbc	hl, hl
BB0_35:
	ld	(ix - 3), hl
BB0_36:
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_39
	ld	(ix - 12), bc
	lea	bc, iy
	ld	hl, (ix - 6)
	ld	a, l
	ld	hl, 2097152
	ld	e, 65
	call	__fmul
	ld	l, a
	ld	(ix - 6), hl
	push	hl
	ld	(ix - 9), bc
	push	bc
	call	__isfinitef
	ld	bc, (ix - 12)
	ld	e, 127
	pop	hl
	pop	hl
	bit	0, a
	jr	z, BB0_40
	dec	bc
	ld	iy, (ix - 9)
	jr	BB0_36
BB0_39:
	ld	bc, (ix - 3)
	ld	(ix - 21), iy
	ld	hl, (ix - 6)
	ld	e, l
	jr	BB0_41
BB0_40:
	ld	hl, 5
	ld	(_errno), hl
BB0_41:
	ld	a, e
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	push	bc
	pop	hl
	jp	p, BB0_43
	or	a, a
	sbc	hl, hl
BB0_43:
	inc	hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	iy
BB0_44:
	dec	iy
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_47
	ld	bc, (ix - 21)
	ld	hl, 2097152
	ld	e, 65
	call	__fdiv
	ld	e, a
	ld	(ix - 21), bc
	push	bc
	pop	hl
	call	__lcmpzero
	jr	nz, BB0_44
	ld	hl, 5
	ld	(_errno), hl
BB0_47:
	ld	hl, (ix - 21)
	ld	iyl, a
BB0_48:
	ld	a, (ix - 22)
	ex	de, hl
	cp	a, 45
	jr	z, BB0_50
	ld	l, 0
	jr	BB0_51
BB0_50:
	ld	l, -1
BB0_51:
	push	de
	pop	bc
	ld	a, iyl
	call	__fneg
	bit	0, l
	jr	nz, BB0_53
	push	de
	pop	bc
BB0_53:
	bit	0, l
	jr	nz, BB0_55
	ld	a, iyl
BB0_55:
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__strtod_c
	label	__strtod_c at __strtof_c

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_isspace
	extern	__lcmpzero
	extern	__fadd
	extern	_errno
	extern	__fmul
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	__iand
	extern	__fneg
	extern	__fdiv
	extern	__imulu
	extern	__ineg
	extern	__ltof
	extern	__isfinitef
