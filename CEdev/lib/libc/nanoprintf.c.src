	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	__vsnprintf_c
__vsnprintf_c:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	iy, 0
	lea	bc, ix - 9
	ld	(ix - 9), hl
	ld	(ix - 6), de
	ld	(ix - 3), iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_2
	ld	de, _npf_bufputc
	jr	BB0_3
BB0_2:
	ld	de, _npf_bufputc_nop
BB0_3:
	ld	(ix - 12), de
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	(ix - 18), bc
	push	bc
	push	de
	call	_npf_vpprintf
	ld	(ix - 15), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 12)
	call	__indcallhl
	ld	bc, (ix - 15)
	pop	hl
	pop	hl
	ld	de, (ix + 9)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_6
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_6
	ld	iy, (ix + 6)
	add	iy, de
	ld	(iy - 1), 0
BB0_6:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_bufputc
_npf_bufputc:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, (iy + 6)
	ld	bc, (iy + 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nc, BB1_2
	ld	a, (ix + 6)
	ld	hl, (iy)
	push	de
	pop	bc
	inc	bc
	ld	(iy + 6), bc
	add	hl, de
	ld	(hl), a
BB1_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_bufputc_nop
_npf_bufputc_nop:
	call	__frameset0
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_vpprintf
_npf_vpprintf:
	ld	hl, -121
	call	__frameset
	ld	iy, (ix + 12)
	ld	hl, (ix + 15)
	ld	(ix - 54), hl
	ld	l, 10
	ld	(ix - 76), hl
	or	a, a
	sbc	hl, hl
	ld	d, h
	lea	bc, ix - 36
	ld	(ix - 64), bc
	ld	(ix - 42), hl
BB3_1:
	ld	l, (iy)
	ld	a, l
	or	a, a
	jp	z, BB3_371
	ld	(ix - 51), l
	ld	a, l
	cp	a, 37
	ld	(ix - 73), d
	ld	a, 1
	ld	(ix - 70), a
	ld	a, 0
	ld	(ix - 45), a
	ld	l, a
	ld	(ix - 67), a
	ld	c, a
	ld	h, a
	ld	(ix - 39), iy
	jp	nz, BB3_75
BB3_3:
	ld	a, c
	or	a, a
	ld	a, 1
	ld	e, a
	jr	z, BB3_5
	ld	a, 0
	ld	e, a
BB3_5:
	inc	iy
BB3_6:
	ld	(ix - 57), l
	ld	d, (iy)
	ld	a, d
	or	a, a
	jp	z, BB3_24
	ld	(ix - 77), e
	ld	(ix - 61), h
	ld	(ix - 58), c
	ld	a, d
	rlc	a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	a, d
	ld	c, d
	push	bc
	pop	hl
	ld	de, 32
	or	a, a
	sbc	hl, de
	jr	z, BB3_12
	push	bc
	pop	hl
	ld	de, 35
	or	a, a
	sbc	hl, de
	jr	z, BB3_20
	push	bc
	pop	hl
	ld	de, 43
	or	a, a
	sbc	hl, de
	jr	z, BB3_22
	push	bc
	pop	hl
	ld	de, 45
	or	a, a
	sbc	hl, de
	jr	z, BB3_23
	ld	(ix - 48), iy
	inc	iy
	push	bc
	pop	hl
	ld	de, 48
	or	a, a
	sbc	hl, de
	ld	e, (ix - 77)
	ld	l, e
	ld	c, (ix - 58)
	ld	h, (ix - 61)
	jr	z, BB3_6
	jp	BB3_104
BB3_12:
	ld	h, (ix - 61)
	ld	a, h
	or	a, a
	ld	a, -1
	jr	z, BB3_14
	ld	a, 0
BB3_14:
	bit	0, a
	ld	l, 32
	ld	e, (ix - 57)
	ld	c, (ix - 58)
	jr	nz, BB3_16
	ld	l, (ix - 45)
BB3_16:
	bit	0, a
	ld	a, 32
	jr	nz, BB3_18
	ld	a, h
BB3_18:
	ld	(ix - 45), l
	ld	h, a
BB3_19:
	ld	l, e
	jp	BB3_3
BB3_20:
	ld	a, 1
	ld	(ix - 73), a
	dec	a
	ld	(ix - 70), a
	ld	l, (ix - 57)
	ld	c, (ix - 58)
BB3_21:
	ld	h, (ix - 61)
	jp	BB3_3
BB3_22:
	ld	a, 43
	ld	(ix - 45), a
	ld	h, a
	ld	e, (ix - 57)
	ld	c, (ix - 58)
	jr	BB3_19
BB3_23:
	ld	l, 0
	ld	c, 45
	ld	(ix - 67), c
	jr	BB3_21
BB3_24:
	ld	(ix - 48), iy
BB3_25:
	xor	a, a
	ld	e, a
	sbc	hl, hl
BB3_26:
	ld	a, d
	add	a, -48
	cp	a, 10
	jr	nc, BB3_28
	ld	bc, 10
	call	__imulu
	push	hl
	pop	iy
	ld	a, d
	rlc	a
	sbc	hl, hl
	push	hl
	pop	bc
	lea	hl, iy
	ld	c, d
	ld	de, -48
	add	hl, de
	add	hl, bc
	ld	iy, (ix - 48)
	ld	d, (iy + 1)
	inc	iy
	ld	(ix - 48), iy
	ld	a, 1
	ld	e, a
	jr	BB3_26
BB3_28:
	ld	(ix - 83), hl
	ld	iy, (ix - 48)
BB3_29:
	ld	(ix - 77), e
	ld	a, d
	cp	a, 46
	jr	nz, BB3_32
	ld	a, (iy + 1)
	cp	a, 42
	jr	nz, BB3_41
	lea	hl, iy + 2
	ld	d, (iy + 2)
	push	hl
	pop	iy
	ld	a, 2
	jr	BB3_33
BB3_32:
	xor	a, a
BB3_33:
	ld	(ix - 61), a
	or	a, a
	sbc	hl, hl
BB3_34:
	ld	(ix - 80), hl
	ld	(ix - 48), iy
	inc	iy
	ld	a, d
	rlc	a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, d
	push	bc
	pop	hl
	ld	de, 76
	or	a, a
	sbc	hl, de
	jr	nz, BB3_36
	ld	d, 2
	jp	BB3_56
BB3_36:
	push	bc
	pop	hl
	ld	de, 104
	or	a, a
	sbc	hl, de
	jr	nz, BB3_43
	lea	hl, iy
	ld	iy, (ix - 48)
	ld	a, (iy + 1)
	cp	a, 104
	ld	a, -1
	jr	z, BB3_39
	ld	a, 0
BB3_39:
	bit	0, a
	ld	d, 3
	jr	nz, BB3_54
	ld	d, 1
	jr	BB3_54
BB3_41:
	cp	a, 45
	jr	nz, BB3_45
	lea	iy, iy + 2
	xor	a, a
	jr	BB3_46
BB3_43:
	push	bc
	pop	hl
	ld	de, 106
	or	a, a
	sbc	hl, de
	jr	nz, BB3_49
	ld	d, 6
	jr	BB3_56
BB3_45:
	inc	iy
	ld	a, 1
BB3_46:
	ld	(ix - 61), a
	or	a, a
	sbc	hl, hl
BB3_47:
	ld	d, (iy)
	ld	a, d
	add	a, -48
	cp	a, 10
	jr	nc, BB3_34
	ld	bc, 0
	ld	c, d
	ld	(ix - 48), bc
	ld	bc, 10
	call	__imulu
	inc	iy
	ld	de, -48
	add	hl, de
	ld	de, (ix - 48)
	add	hl, de
	jr	BB3_47
BB3_49:
	push	bc
	pop	hl
	ld	de, 108
	or	a, a
	sbc	hl, de
	jp	nz, BB3_86
	lea	hl, iy
	ld	iy, (ix - 48)
	ld	a, (iy + 1)
	cp	a, 108
	ld	a, -1
	jr	z, BB3_52
	ld	a, 0
BB3_52:
	bit	0, a
	ld	d, 5
	jr	nz, BB3_54
	ld	d, 4
BB3_54:
	bit	0, a
	jr	z, BB3_57
	ld	iy, (ix - 48)
	lea	iy, iy + 2
BB3_56:
	lea	hl, iy
BB3_57:
	ld	(ix - 87), d
	ld	(ix - 48), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	iy
	ld	iyl, a
	lea	hl, iy
	ld	bc, 37
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_65
	ld	a, 32
	ld	iyl, a
	xor	a, a
	ld	(ix - 61), a
	inc	a
BB3_59:
	ld	(ix - 58), a
BB3_60:
	ld	bc, (ix - 39)
	ld	hl, (ix - 48)
	inc	hl
	push	hl
	pop	de
	or	a, a
	sbc	hl, bc
	jp	z, BB3_75
	ld	(ix - 90), iy
	ld	iy, (ix - 39)
	lea	bc, iy
	ex	de, hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	add	iy, bc
	ld	(ix - 39), iy
	ld	e, (ix - 77)
	ld	a, e
	cp	a, 2
	jp	nz, BB3_77
	ld	iy, (ix - 54)
	ld	hl, (iy)
	push	hl
	pop	de
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	a, 1
	ld	(ix - 84), a
	jp	m, BB3_64
	ld	a, (ix - 67)
	ld	(ix - 84), a
BB3_64:
	lea	hl, iy + 3
	ld	(ix - 48), hl
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	ld	(ix - 83), hl
	ld	e, (ix - 77)
	jp	BB3_78
BB3_65:
	lea	hl, iy
	ld	bc, -65
	add	hl, bc
	push	hl
	pop	bc
	ld	de, 7
	or	a, a
	sbc	hl, de
	jr	c, BB3_70
	ld	de, -88
	add	iy, de
	lea	bc, iy
	push	bc
	pop	hl
	ld	de, 33
	or	a, a
	sbc	hl, de
	jr	nc, BB3_75
	ld	hl, JTI3_1
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	a, 32
	ld	iyl, a
	ld	a, 6
	ld	(ix - 58), a
	jp	(hl)
BB3_68:
	xor	a, a
	ld	iyl, a
BB3_69:
	ld	a, 7
	jp	BB3_170
BB3_70:
	ld	hl, JTI3_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB3_71:
	xor	a, a
	ld	iyl, a
BB3_72:
	ld	a, (ix - 61)
	or	a, a
	ld	hl, 6
	jr	z, BB3_74
	ld	hl, (ix - 80)
BB3_74:
	ld	(ix - 80), hl
	ld	a, 14
	jp	BB3_59
BB3_75:
	ld	hl, (ix - 42)
	inc	hl
	ld	(ix - 42), hl
	ld	hl, (ix - 39)
	inc	hl
	ld	(ix - 39), hl
	ld	e, (ix - 51)
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	l, e
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
BB3_76:
	ld	d, 0
	jp	BB3_1
BB3_77:
	ld	a, (ix - 67)
	ld	(ix - 84), a
	ld	hl, (ix - 54)
	ld	(ix - 48), hl
BB3_78:
	ld	d, (ix - 58)
	ld	a, (ix - 61)
	cp	a, 2
	ld	iy, (ix - 80)
	jr	nz, BB3_80
	ld	iy, (ix - 48)
	lea	hl, iy + 3
	ld	(ix - 54), hl
	ld	iy, (iy)
	lea	hl, iy
	ld	c, 22
	call	__ishru
	ld	a, l
	cpl
	and	a, 2
	ld	(ix - 61), a
	jr	BB3_81
BB3_80:
	ld	hl, (ix - 48)
	ld	(ix - 54), hl
BB3_81:
	ld	a, d
	dec	a
	ld	bc, 0
	cp	a, 14
	ld	(ix - 58), d
	ld	(ix - 80), a
	jr	c, BB3_84
BB3_82:
	ld	(ix - 51), iy
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	sbc	hl, hl
	ld	(ix - 48), hl
	ld	(ix - 67), hl
	ld	d, a
BB3_83:
	ld	b, d
	jp	BB3_309
BB3_84:
	ld	(ix - 93), iy
	ld	c, a
	ld	hl, JTI3_2
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	iy, (ix - 54)
	lea	de, iy + 3
	jp	(hl)
BB3_85:
	ld	(ix - 36), 37
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	ld	hl, 1
	ld	(ix - 48), hl
	dec	hl
	jp	BB3_121
BB3_86:
	push	bc
	pop	hl
	ld	de, 116
	or	a, a
	sbc	hl, de
	jr	nz, BB3_102
	ld	d, 8
	jp	BB3_56
BB3_88:
	xor	a, a
	ld	iyl, a
BB3_89:
	ld	a, 5
	jp	BB3_59
BB3_90:
	xor	a, a
	ld	iyl, a
BB3_91:
	ld	a, (ix - 61)
	or	a, a
	ld	hl, 6
	jr	z, BB3_93
	ld	hl, (ix - 80)
BB3_93:
	ld	(ix - 80), hl
	ld	a, 12
	jp	BB3_59
BB3_94:
	xor	a, a
	ld	iyl, a
BB3_95:
	ld	a, (ix - 61)
	or	a, a
	ld	hl, 6
	jr	z, BB3_97
	ld	hl, (ix - 80)
BB3_97:
	ld	(ix - 80), hl
	ld	a, 11
	jp	BB3_59
BB3_98:
	xor	a, a
	ld	iyl, a
BB3_99:
	ld	a, (ix - 61)
	or	a, a
	ld	hl, 6
	jr	z, BB3_101
	ld	hl, (ix - 80)
BB3_101:
	ld	(ix - 80), hl
	ld	a, 13
	jp	BB3_59
BB3_102:
	push	bc
	pop	hl
	ld	de, 122
	or	a, a
	sbc	hl, de
	ld	hl, (ix - 48)
	jp	nz, BB3_57
	ld	d, 7
	jp	BB3_56
BB3_104:
	ld	d, a
	cp	a, 42
	jp	nz, BB3_25
	lea	hl, iy
	ld	iy, (ix - 48)
	ld	d, (iy + 1)
	push	hl
	pop	iy
	ld	a, 2
	ld	e, a
	or	a, a
	sbc	hl, hl
	ld	(ix - 83), hl
	jp	BB3_29
BB3_106:
	ld	(ix - 45), de
	ld	iy, (iy)
	ld	de, 0
	ld	(ix - 48), de
BB3_107:
	ld	a, (ix - 61)
	or	a, a
	jr	nz, BB3_109
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_111
	jp	BB3_173
BB3_109:
	ld	hl, (ix - 48)
	ld	bc, (ix - 93)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_174
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB3_163
BB3_111:
	lea	hl, iy
	ld	bc, (ix - 48)
	add	hl, bc
	ld	a, (hl)
	or	a, a
	jp	z, BB3_163
	inc	bc
	ld	(ix - 48), bc
	jr	BB3_107
BB3_113:
	ld	a, (ix - 87)
	cp	a, 9
	jp	c, BB3_124
	ld	d, (ix - 58)
	jp	BB3_213
BB3_115:
	ld	a, (iy)
	ld	(ix - 36), a
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	ld	hl, 1
	ld	(ix - 48), hl
	dec	hl
	ld	(ix - 67), hl
	push	de
	pop	bc
	ld	d, a
	ld	e, d
	jp	BB3_176
BB3_116:
	ld	a, (ix - 87)
	cp	a, 9
	jp	c, BB3_126
	xor	a, a
	ld	(ix - 99), a
	ld	e, (ix - 45)
	jp	BB3_257
BB3_118:
	ld	hl, (iy)
	ld	(ix - 45), de
	ld	de, 0
	ld	bc, 32
	push	bc
	ld	bc, 16
	push	bc
	ld	bc, (ix - 64)
	push	bc
	push	de
	push	de
	push	hl
	call	_npf_utoa_rev
	ld	e, (ix - 77)
	ld	(ix - 48), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	ld	hl, 120
	ld	(ix - 67), hl
	ld	d, a
	ld	b, d
	ld	hl, (ix - 45)
	ld	(ix - 54), hl
	jp	BB3_239
BB3_119:
	ld	a, (ix - 87)
	cp	a, 9
	jp	c, BB3_128
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	sbc	hl, hl
	ld	(ix - 48), hl
BB3_121:
	ld	(ix - 67), hl
	ld	d, 0
	ld	b, d
	jp	BB3_234
BB3_122:
	ld	a, (ix - 87)
	cp	a, 2
	jp	nz, BB3_130
	ld	iy, (ix - 54)
	lea	hl, iy + 9
	ld	(ix - 87), hl
	ld	hl, (iy)
	ld	de, (iy + 3)
	ld	bc, (iy + 6)
	jp	BB3_131
BB3_124:
	ld	bc, 0
	ld	c, a
	ld	hl, JTI3_4
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB3_125:
	ld	iy, (ix - 54)
	lea	hl, iy + 3
	ld	(ix - 45), hl
	ld	hl, (iy)
	ld	bc, 65535
	jp	BB3_205
BB3_126:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, a
	ld	hl, JTI3_5
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	xor	a, a
	ld	(ix - 99), a
	ld	e, (ix - 45)
	jp	(hl)
BB3_127:
	ld	iy, (ix - 54)
	lea	de, iy + 3
	ld	iy, (iy)
	ld	a, iyh
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	jp	BB3_249
BB3_128:
	ld	(ix - 45), de
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, a
	ld	hl, JTI3_3
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	ld	e, (ix - 77)
	ld	iy, (ix - 93)
	jp	(hl)
BB3_129:
	ld	hl, (ix - 54)
	ld	hl, (hl)
	ld	de, (ix - 42)
	ld	(hl), de
	jp	BB3_268
BB3_130:
	ld	iy, (ix - 54)
	lea	hl, iy + 6
	ld	(ix - 87), hl
	ld	hl, (iy)
	ld	e, (iy + 3)
	call	__ftod
BB3_131:
	ld	(ix - 54), bc
	push	bc
	ld	(ix - 51), de
	push	de
	ld	(ix - 48), hl
	push	hl
	call	__signbitl
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	a, 45
	jr	nz, BB3_133
	ld	a, (ix - 45)
BB3_133:
	ld	(ix - 67), a
	ld	hl, (ix - 54)
	push	hl
	ld	hl, (ix - 51)
	push	hl
	ld	hl, (ix - 48)
	push	hl
	call	__iszerol
	ld	(ix - 45), a
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 52
	push	hl
	ld	hl, (ix - 48)
	ld	de, (ix - 51)
	ld	bc, (ix - 54)
	call	__llshru
	pop	de
	ld.sis	bc, 2047
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	hl, 15
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 48)
	ld	de, (ix - 51)
	ld	bc, (ix - 54)
	call	__lland
	ld	(ix - 51), hl
	ld	(ix - 48), de
	pop	hl
	pop	hl
	pop	hl
	ld	(ix - 54), iy
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2047
	or	a, a
	sbc.sis	hl, de
	jr	nz, BB3_136
	ld	hl, (ix - 51)
	ld	de, (ix - 48)
	call	__llcmpzero
	ld	hl, _.str.1
	jp	z, BB3_302
	ld	hl, _.str
	jp	BB3_302
BB3_136:
	ld	hl, (ix - 93)
	ld	de, 35
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, 0
	ld	iy, 0
	jp	p, BB3_302
	ld	hl, (ix - 54)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	a, -1
	jr	z, BB3_139
	ld	a, 0
BB3_139:
	ld	hl, 16
	push	hl
	push	iy
	push	iy
	ld	hl, (ix - 51)
	ld	de, (ix - 48)
	ld	(ix - 105), bc
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	bit	0, a
	jr	nz, BB3_141
	ld	(ix - 51), hl
BB3_141:
	bit	0, a
	jr	nz, BB3_143
	ld	(ix - 48), de
BB3_143:
	bit	0, a
	jr	nz, BB3_145
	ld	(ix - 105), bc
BB3_145:
	bit	0, a
	ld.sis	de, 1
	jr	nz, BB3_147
	ld	de, (ix - 54)
BB3_147:
	ld	l, e
	ld	h, d
	ld.sis	bc, -1023
	add.sis	hl, bc
	ld	(ix - 99), hl
	ld	iy, (ix - 93)
	lea	hl, iy
	ld	bc, 255
	call	__iand
	push	hl
	pop	bc
	ld	a, c
	or	a, a
	jr	nz, BB3_149
	bit	0, (ix - 70)
	push	af
	ld	a, iyl
	ld	(ix - 54), a
	pop	af
	jr	nz, BB3_150
BB3_149:
	ld	a, iyl
	inc	a
	ld	(ix - 54), a
	ld	hl, (ix - 64)
	add	hl, bc
	ld	(hl), 46
BB3_150:
	ld	l, e
	ld	h, d
	ld.sis	bc, 1023
	or	a, a
	sbc.sis	hl, bc
	jp	c, BB3_177
	ld	l, e
	ld	h, d
	ld.sis	de, 1076
	or	a, a
	sbc.sis	hl, de
	ld.sis	hl, 52
	ld	e, l
	ld	d, h
	ld	hl, (ix - 99)
	jr	nc, BB3_153
	ld	e, l
	ld	d, h
BB3_153:
	or	a, a
	sbc.sis	hl, de
	ld	(ix - 73), hl
	ld	a, 52
	ld	(ix - 96), de
	sub	a, e
	ld	iy, 0
	ld	iyl, a
	push	iy
	ld	hl, (ix - 51)
	ld	de, (ix - 48)
	ld	bc, (ix - 105)
	call	__llshru
	ld	(ix - 70), hl
	pop	hl
	ld	hl, (ix - 73)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	a, iyh
	jr	z, BB3_156
	ld	hl, (ix - 96)
	ld	a, l
	cp	a, 52
	ld.sis	hl, 52
	ld	(ix - 99), hl
	ld	a, h
	jr	z, BB3_156
	dec	iy
	push	iy
	ld	hl, (ix - 51)
	ld	(ix - 102), de
	ld	de, (ix - 48)
	push	bc
	pop	iy
	ld	bc, (ix - 105)
	call	__llshru
	lea	bc, iy
	pop	de
	ld	de, (ix - 102)
	ld	a, l
	and	a, 1
	ld.sis	hl, 52
	ld	(ix - 99), hl
BB3_156:
	ld	hl, (ix - 73)
BB3_157:
	ld	(ix - 73), hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 96), bc
	jp	z, BB3_178
	push	bc
	push	de
	ld	iy, (ix - 70)
	push	iy
	ld	(ix - 102), de
	ld	de, -1
	push	de
	pop	hl
	ld.sis	bc, -1
	call	__llcmps
	pop	hl
	pop	hl
	pop	hl
	call	pe, __setflag
	jp	p, BB3_160
	ld	hl, 1
	push	hl
	lea	hl, iy
	ld	de, (ix - 102)
	ld	bc, (ix - 96)
	call	__llshl
	ld	(ix - 70), hl
	pop	iy
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	iy, 0
	push	iy
	push	iy
	push	hl
	ld	hl, (ix - 70)
	call	__lladd
	ld	(ix - 70), hl
	pop	hl
	pop	hl
	pop	hl
	xor	a, a
	jp	BB3_162
BB3_160:
	ld	iy, (ix - 96)
	ld	de, (ix - 102)
	ld	(ix - 109), a
	ld	a, (ix - 54)
	cp	a, 36
	jp	nc, BB3_301
	ld	bc, 0
	ld	c, a
	inc	a
	ld	(ix - 54), a
	ld	hl, (ix - 64)
	add	hl, bc
	ld	(hl), 48
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 70)
	ld	c, iyl
	ld	b, iyh
	call	__lldivu
	ld	(ix - 108), hl
	ld	(ix - 102), de
	ld	(ix - 96), bc
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 108)
	ld	de, (ix - 102)
	ld	bc, (ix - 96)
	call	__llmulu
	ld	bc, (ix - 96)
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 70)
	or	a, a
	sbc	hl, de
	ld	de, 0
	ld	e, (ix - 109)
	add	hl, de
	ld	de, 3
	or	a, a
	sbc	hl, de
	ld	de, (ix - 102)
	sbc	a, a
	inc	a
	ld	hl, (ix - 108)
	ld	(ix - 70), hl
BB3_162:
	ld	hl, (ix - 73)
	dec.sis	hl
	jp	BB3_157
BB3_163:
	ld	(ix - 73), iy
	ex	de, hl
	ld	de, (ix - 93)
	ld	(ix - 51), de
	jr	BB3_175
BB3_164:
	ld	a, 32
	ld	iyl, a
	xor	a, a
	ld	(ix - 61), a
	ld	a, 2
	jp	BB3_59
BB3_165:
	ld	a, 32
	ld	iyl, a
	ld	a, 4
	jr	BB3_170
BB3_166:
	ld	a, 32
	ld	iyl, a
	xor	a, a
	ld	(ix - 61), a
	ld	hl, (ix - 76)
	ld	(ix - 58), l
	jp	BB3_60
BB3_167:
	ld	a, 32
	ld	iyl, a
	xor	a, a
	ld	(ix - 61), a
	ld	a, 9
	jp	BB3_59
BB3_168:
	ld	a, 32
	ld	iyl, a
	xor	a, a
	ld	(ix - 57), a
	ld	a, 3
	jp	BB3_59
BB3_169:
	ld	a, 32
	ld	iyl, a
	ld	a, 8
BB3_170:
	ld	(ix - 58), a
BB3_171:
	ld	a, (ix - 61)
	or	a, a
	jp	z, BB3_60
	xor	a, a
	ld	(ix - 57), a
	jp	BB3_60
BB3_173:
	ex	de, hl
	ld	de, (ix - 93)
	ld	(ix - 51), de
	ld	de, 0
	ld	(ix - 73), de
	jr	BB3_175
BB3_174:
	ld	(ix - 73), iy
	ex	de, hl
	ld	(ix - 51), bc
BB3_175:
	xor	a, a
	ld	(ix - 67), hl
	ld	d, a
	ld	e, d
	ld	bc, (ix - 45)
BB3_176:
	ld	(ix - 54), bc
	jp	BB3_233
BB3_177:
	xor	a, a
	ld	(ix - 109), a
	ld	de, 0
	ld	(ix - 70), de
	ld.sis	hl, 0
	ld	(ix - 96), hl
	jr	BB3_179
BB3_178:
	ld	(ix - 109), a
BB3_179:
	or	a, a
	sbc	hl, hl
	push	af
	ld	a, (ix - 54)
	ld	iyl, a
	pop	af
	ld	a, iyl
	cp	a, 37
	jr	nc, BB3_181
	ld	a, 36
BB3_181:
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	ld	(ix - 73), hl
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	a, iyl
	ld	(ix - 112), hl
BB3_182:
	ld	bc, (ix - 73)
	or	a, a
	sbc	hl, bc
	jp	z, BB3_301
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, (ix - 70)
	ld	(ix - 102), de
	push	af
	ld	a, iyl
	ld	(ix - 54), a
	pop	af
	ld	iy, (ix - 96)
	ld	c, iyl
	ld	b, iyh
	call	__lldivu
	ld	(ix - 121), hl
	ld	(ix - 115), de
	ld	(ix - 118), bc
	pop	de
	pop	de
	pop	de
	ld	de, (ix - 76)
	ld	d, l
	ld	(ix - 76), de
	ld	l, e
	ld	h, d
	mlt	hl
	ld	(ix - 108), a
	ld	de, (ix - 70)
	ld	a, e
	sub	a, l
	or	a, 48
	ld	hl, (ix - 64)
	ld	bc, (ix - 73)
	add	hl, bc
	inc	bc
	ld	(ix - 73), bc
	ld	(hl), a
	ld	a, (ix - 108)
	inc	a
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 10
	push	hl
	ex	de, hl
	ld	de, (ix - 102)
	ld	c, iyl
	ld	b, iyh
	call	__llcmpu
	push	af
	ld	a, (ix - 54)
	ld	iyl, a
	pop	af
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 121)
	ld	(ix - 70), hl
	ld	de, (ix - 115)
	ld	hl, (ix - 118)
	ld	(ix - 96), hl
	ld	hl, (ix - 112)
	jp	nc, BB3_182
	ld	bc, (ix - 99)
	ld	l, c
	ld	h, b
	ld.sis	de, 52
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	(ix - 108), a
	jp	p, BB3_276
	ld	l, c
	ld	h, b
	ld.sis	de, 0
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB3_187
	ld.sis	bc, -1
BB3_187:
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	h, b
	ld	c, 16
	call	__ishl
	call	__ishrs
	push	hl
	pop	iy
	ld	e, iyl
	ld	d, iyh
	ld	hl, (ix - 99)
	or	a, a
	sbc.sis	hl, de
	ld	(ix - 54), hl
	ld	de, 12
	add	iy, de
	push	iy
	ld	hl, (ix - 51)
	ld	de, (ix - 48)
	ld	bc, (ix - 105)
	call	__llshl
	ld	(ix - 48), hl
	ld	(ix - 51), de
	pop	hl
	ld	iyl, 0
	ld	iyh, iyl
	ld	hl, (ix - 93)
	ld	a, l
BB3_188:
	ld	(ix - 73), a
	or	a, a
	jp	z, BB3_277
	ld	hl, (ix - 54)
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB3_277
	ld	hl, 13107
	push	hl
	ld	hl, 3355443
	push	hl
	push	hl
	ld	hl, (ix - 48)
	ld	de, (ix - 51)
	ld	(ix - 70), bc
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	jp	nc, BB3_200
	ld	a, iyl
	or	a, a
	jr	nz, BB3_200
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 48)
	ld	de, (ix - 51)
	ld	bc, (ix - 70)
	call	__llmulu
	ld	(ix - 48), hl
	pop	hl
	pop	hl
	pop	hl
	ld	a, iyh
	xor	a, 1
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, 3
	push	hl
	ld	hl, (ix - 48)
	ld	(ix - 51), de
	ld	(ix - 70), bc
	call	__lladd
	pop	iy
	pop	iy
	pop	iy
	bit	0, a
	jr	nz, BB3_194
	ld	(ix - 48), hl
BB3_194:
	bit	0, a
	jr	nz, BB3_196
	ld	(ix - 51), de
BB3_196:
	bit	0, a
	jr	nz, BB3_198
	ld	(ix - 70), bc
BB3_198:
	ld	hl, (ix - 54)
	ld.sis	de, 0
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	jp	p, BB3_201
	ld	a, (ix - 73)
	dec	a
	ld	(ix - 73), a
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, a
	ld	hl, (ix - 64)
	add	hl, de
	ld	(hl), 48
	ld	iyl, 0
	ld	iyh, iyl
	jr	BB3_202
BB3_200:
	ld	de, (ix - 48)
	ld	a, e
	and	a, 1
	ld	iyh, a
	ld	hl, 1
	push	hl
	ex	de, hl
	ld	de, (ix - 51)
	ld	bc, (ix - 70)
	call	__llshru
	ld	(ix - 48), hl
	ld	(ix - 51), de
	pop	hl
	jr	BB3_203
BB3_201:
	ld	iyh, 0
	ld	iyl, 1
BB3_202:
	ld	bc, (ix - 70)
BB3_203:
	ld	hl, (ix - 54)
	inc.sis	hl
	ld	(ix - 54), hl
	ld	a, (ix - 73)
	jp	BB3_188
BB3_204:
	ld	iy, (ix - 54)
	lea	hl, iy + 3
	ld	(ix - 45), hl
	ld	hl, (iy)
	ld	bc, 255
BB3_205:
	call	__iand
	push	hl
	pop	de
	or	a, a
	sbc	hl, hl
	ld	(ix - 51), hl
	ld	c, l
	ld	b, h
	jr	BB3_211
BB3_206:
	ld	iy, (ix - 54)
	lea	hl, iy + 6
	ld	(ix - 45), hl
	ld	hl, (iy)
	ld	bc, 0
	ld	c, (iy + 3)
	ld	(ix - 51), bc
	jr	BB3_210
BB3_207:
	ld	iy, (ix - 54)
	lea	hl, iy + 9
	ld	(ix - 45), hl
	ld	de, (iy)
	lea	bc, iy
	ld	hl, (iy + 3)
	ld	(ix - 51), hl
	ld	bc, (iy + 6)
	jr	BB3_211
BB3_208:
	ld	iy, (ix - 54)
	lea	hl, iy + 9
	ld	de, (iy)
	ld	bc, (iy + 3)
	ld	(ix - 51), bc
	ld	bc, (iy + 6)
	jr	BB3_212
BB3_209:
	ld	iy, (ix - 54)
	lea	hl, iy + 3
	ld	(ix - 45), hl
	ld	hl, (iy)
	ld	de, 0
	ld	(ix - 51), de
BB3_210:
	ld.sis	de, 0
	ld	c, e
	ld	b, d
	ex	de, hl
BB3_211:
	ld	hl, (ix - 45)
BB3_212:
	ld	(ix - 54), hl
	ld	(ix - 67), de
	ex	de, hl
	ld	de, (ix - 51)
	call	__llcmpzero
	ld	a, 0
	ld	(ix - 45), a
	ld	d, (ix - 58)
	jr	nz, BB3_218
BB3_213:
	ld	a, (ix - 61)
	or	a, a
	jr	nz, BB3_215
	ld	a, 1
	ld	(ix - 45), a
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	jr	BB3_217
BB3_215:
	ld	hl, (ix - 93)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, 0
	jp	z, BB3_240
	ld	a, 1
	ld	(ix - 45), a
BB3_217:
	ld	(ix - 67), iy
	ld	(ix - 51), iy
	ld.sis	hl, 0
	ld	c, l
	ld	b, h
BB3_218:
	ld	a, d
	cp	a, 5
	jr	nz, BB3_222
	ld	hl, (ix - 67)
	ld	de, (ix - 51)
	call	__llctlz
	ld	de, 0
	ld	e, a
	ld	hl, 64
	or	a, a
	sbc	hl, de
	bit	0, (ix - 45)
	ld	de, 1
	jr	nz, BB3_221
	ex	de, hl
BB3_221:
	ld	(ix - 48), de
	ld	hl, (ix - 67)
	ld	(ix - 36), hl
	ld	hl, (ix - 51)
	ld	(ix - 33), hl
	ld	(ix - 30), c
	ld	(ix - 29), b
	ld	iy, 0
	ld	d, (ix - 58)
	jp	BB3_226
BB3_222:
	ld	a, d
	cp	a, 6
	ld	hl, 8
	jp	z, BB3_225
	ld	a, d
	cp	a, 7
	ld	a, 16
	ld	l, a
	jp	z, BB3_225
	ld	hl, (ix - 76)
BB3_225:
	ld	de, (ix - 90)
	push	de
	push	hl
	ld	hl, (ix - 64)
	push	hl
	push	bc
	ld	hl, (ix - 51)
	push	hl
	ld	hl, (ix - 67)
	push	hl
	call	_npf_utoa_rev
	ld	d, (ix - 58)
	ld	(ix - 48), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, 0
BB3_226:
	ld	a, (ix - 45)
BB3_227:
	ld	e, a
	or	a, (ix - 70)
	ld	l, a
	ld	a, d
	cp	a, 6
	jr	z, BB3_229
	ld	d, 0
	jr	BB3_231
BB3_229:
	bit	0, l
	ld	d, 0
	jr	nz, BB3_231
	ld	iy, (ix - 64)
	ld	bc, (ix - 48)
	add	iy, bc
	inc	bc
	ld	(ix - 48), bc
	ld	(iy), 48
	ld	iy, 0
BB3_231:
	bit	0, l
	jr	z, BB3_235
	lea	hl, iy
	ld	bc, (ix - 93)
	ld	(ix - 51), bc
	ld	bc, (ix - 64)
	ld	(ix - 73), bc
	xor	a, a
	ld	(ix - 67), hl
BB3_233:
	ld	b, e
BB3_234:
	ld	e, (ix - 77)
	jp	BB3_309
BB3_235:
	ld	a, (ix - 58)
	cp	a, 5
	jr	nz, BB3_237
	ld	hl, 66
	ld	iy, (ix - 90)
	ld	e, (ix - 77)
	jr	BB3_238
BB3_237:
	cp	a, 7
	ld	hl, 88
	ld	iy, (ix - 90)
	ld	e, (ix - 77)
	jr	nz, BB3_243
BB3_238:
	ld	bc, 0
	ld	c, iyl
	add	hl, bc
	ld	(ix - 67), hl
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	ld	b, d
BB3_239:
	or	a, a
	sbc	hl, hl
	jp	BB3_309
BB3_240:
	ld	a, d
	cp	a, 6
	ld	a, -1
	jr	z, BB3_242
	ld	a, 0
BB3_242:
	and	a, (ix - 73)
	ld	l, a
	ld	bc, 1
	call	__iand
	ld	(ix - 93), hl
	ld	a, c
	ld	(ix - 48), iy
	jp	BB3_227
BB3_243:
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	sbc	hl, hl
	ld	(ix - 67), hl
	jp	BB3_83
BB3_244:
	ld	iy, (ix - 54)
	lea	de, iy + 3
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	jr	BB3_249
BB3_245:
	ld	iy, (ix - 54)
	lea	hl, iy + 6
	ld	(ix - 51), hl
	ld	hl, (iy)
	ld	(ix - 48), hl
	ld	a, (iy + 3)
	ld	l, a
	rlc	l
	sbc	hl, hl
	push	hl
	pop	de
	ld	e, a
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ld	hl, (ix - 51)
	jr	BB3_247
BB3_246:
	ld	iy, (ix - 54)
	lea	hl, iy + 9
	ld	de, (iy)
	ld	(ix - 48), de
	ld	de, (iy + 3)
	ld	bc, (iy + 6)
BB3_247:
	ld	(ix - 54), hl
	jr	BB3_250
BB3_248:
	ld	iy, (ix - 54)
	lea	de, iy + 3
	ld	hl, (iy)
BB3_249:
	ld	(ix - 48), hl
	push	hl
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	c, l
	ld	b, h
	ld	(ix - 54), de
	ex	de, hl
BB3_250:
	ld	hl, (ix - 48)
	push	hl
	pop	iy
	ld	(ix - 70), de
	ld	(ix - 87), bc
	call	__llcmpzero
	ld	a, 1
	jp	m, BB3_252
	ld	a, 0
BB3_252:
	ld	(ix - 99), a
	bit	0, a
	ld	a, 45
	ld	(ix - 96), a
	ld	a, (ix - 45)
	jr	nz, BB3_254
	ld	(ix - 96), a
BB3_254:
	lea	hl, iy
	ld	de, (ix - 70)
	ld	bc, (ix - 87)
	call	__llcmpzero
	ld	a, 1
	jr	nz, BB3_256
	ld	a, 0
BB3_256:
	bit	0, a
	ld	e, (ix - 96)
	ld	a, 0
	ld	b, a
	jp	nz, BB3_260
BB3_257:
	ld	a, (ix - 61)
	or	a, a
	jp	nz, BB3_259
	ld	a, 1
	ld	b, a
	ld	(ix - 96), e
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 70), hl
	ld	(ix - 87), hl
	jp	BB3_260
BB3_259:
	ld	hl, (ix - 93)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	(ix - 45), a
	ld	(ix - 96), e
	ld	hl, 0
	push	hl
	pop	bc
	ld	(ix - 70), hl
	ld	a, e
	ld.sis	de, 0
	ld	(ix - 87), de
	ld	e, (ix - 77)
	ld	d, h
	ld	(ix - 51), hl
	ld	iy, (ix - 64)
	ld	(ix - 73), iy
	push	bc
	pop	iy
	ld	b, (ix - 45)
	ld	(ix - 48), hl
	ld	(ix - 67), hl
	jp	z, BB3_309
BB3_260:
	ld	(ix - 45), b
	lea	hl, iy
	ld	de, (ix - 70)
	ld	bc, (ix - 87)
	call	__llneg
	ld	a, (ix - 99)
	bit	0, a
	jr	nz, BB3_262
	lea	hl, iy
BB3_262:
	bit	0, a
	ld	iy, (ix - 90)
	jr	nz, BB3_264
	ld	de, (ix - 70)
BB3_264:
	bit	0, a
	jp	nz, BB3_266
	ld	bc, (ix - 87)
BB3_266:
	push	iy
	ld	iy, 10
	push	iy
	ld	iy, (ix - 64)
	push	iy
	push	bc
	push	de
	push	hl
	call	_npf_utoa_rev
	ld	(ix - 48), hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 93)
	ld	(ix - 51), hl
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	ld	a, (ix - 96)
	or	a, a
	sbc	hl, hl
	ld	(ix - 67), hl
	jp	BB3_308
BB3_267:
	ld	hl, (ix - 54)
	ld	hl, (hl)
	ld	de, (ix - 42)
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB3_268:
	ld	e, (ix - 77)
	jr	BB3_270
BB3_269:
	ld	hl, (ix - 42)
	ld	a, l
	ld	hl, (ix - 54)
	ld	hl, (hl)
	ld	(hl), a
BB3_270:
	ld	(ix - 51), iy
	jr	BB3_274
BB3_271:
	lea	bc, iy
	ld	de, (ix - 42)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	ld	hl, (ix - 54)
	ld	iy, (hl)
	ld	(iy), de
	ld	e, (ix - 77)
	ld	(iy + 3), a
	jr	BB3_273
BB3_272:
	lea	bc, iy
	ld	de, (ix - 42)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	iy, (ix - 54)
	ld	iy, (iy)
	ld	(iy), de
	ld	e, (ix - 77)
	ld	(iy + 3), hl
	ld	(iy + 6), l
	ld	(iy + 7), h
BB3_273:
	ld	(ix - 51), bc
BB3_274:
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	sbc	hl, hl
	ld	(ix - 48), hl
	ld	(ix - 67), hl
	ld	d, a
	ld	iyl, d
	ld	bc, (ix - 45)
	ld	(ix - 54), bc
	ld	b, iyl
	jp	BB3_309
BB3_275:
	lea	bc, iy
	ld	de, (ix - 42)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	iy, (ix - 54)
	ld	iy, (iy)
	ld	(iy), de
	ld	e, (ix - 77)
	ld	(iy + 3), hl
	ld	(iy + 6), l
	ld	(iy + 7), h
	ld	(ix - 51), bc
	ld	hl, (ix - 64)
	ld	(ix - 73), hl
	xor	a, a
	sbc	hl, hl
	ld	(ix - 48), hl
	ld	(ix - 67), hl
	ld	d, a
	ld	b, d
	ld	iy, (ix - 45)
	ld	(ix - 54), iy
	jp	BB3_309
BB3_276:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	ld.sis	iy, 0
	ld	hl, (ix - 93)
	ld	a, l
	jr	BB3_280
BB3_277:
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, iyh
	ex	de, hl
	ld	de, 0
	push	de
	push	de
	push	hl
	ld	hl, (ix - 48)
	ld	de, (ix - 51)
	call	__lladd
	ld	(ix - 48), hl
	ld	(ix - 70), de
	ld	(ix - 51), bc
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 54)
	ld.sis	de, 0
	or	a, a
	sbc.sis	hl, de
	call	pe, __setflag
	ld	a, 1
	jp	p, BB3_279
	ld	a, 0
BB3_279:
	ld	(ix - 109), a
	xor	a, a
	ld	(ix - 54), a
	ld	a, (ix - 73)
	ld	bc, (ix - 48)
	ld	de, (ix - 70)
	ld	iy, (ix - 51)
BB3_280:
	ld	hl, 63
	push	hl
	ld	(ix - 48), bc
	push	bc
	pop	hl
	ld	(ix - 70), de
	ld	(ix - 51), iy
	ld	c, iyl
	ld	b, iyh
	call	__llshru
	push	hl
	pop	de
	pop	hl
	ld	iyl, a
	or	a, a
	jp	z, BB3_285
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	dec	hl
	ld	(ix - 73), hl
	ld	iy, (ix - 48)
	ld	de, (ix - 70)
	ld	bc, (ix - 51)
BB3_282:
	ld	hl, 60
	push	hl
	ld	(ix - 48), iy
	lea	hl, iy
	push	de
	pop	iy
	ld	(ix - 51), bc
	call	__llshru
	pop	de
	ld	a, l
	add	a, 48
	ld	hl, (ix - 64)
	ld	de, (ix - 73)
	add	hl, de
	ld	(hl), a
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_284
	ld	hl, 4095
	push	hl
	scf
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 48)
	lea	de, iy
	ld	bc, (ix - 51)
	call	__lland
	pop	iy
	pop	iy
	pop	iy
	ld	iy, 0
	push	iy
	push	iy
	ld	iy, 10
	push	iy
	call	__llmulu
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 73)
	dec	hl
	ld	(ix - 73), hl
	jr	BB3_282
BB3_284:
	ld	hl, 59
	push	hl
	ld	hl, (ix - 48)
	lea	de, iy
	ld	bc, (ix - 51)
	call	__llshru
	pop	de
	ld	a, l
	and	a, 1
	ld	e, a
BB3_285:
	ld	hl, (ix - 99)
	ld.sis	bc, 52
	or	a, a
	sbc.sis	hl, bc
	call	pe, __setflag
	ld	iy, (ix - 64)
	jp	m, BB3_287
	ld	a, -1
	ld	e, a
BB3_287:
	ld	a, e
	and	a, (ix - 109)
	ld	l, a
	ld	h, (ix - 54)
	ld	a, h
	cp	a, 37
	ld	b, (ix - 45)
	jr	nc, BB3_289
	ld	a, 36
BB3_289:
	ld	de, 0
	ld	e, h
	ld	(ix - 48), de
	ld	de, 0
	ld	e, a
BB3_290:
	ld	a, l
	or	a, a
	jp	z, BB3_370
	push	de
	pop	hl
	ld	bc, (ix - 48)
	or	a, a
	sbc	hl, bc
	ld	a, (ix - 108)
	jr	z, BB3_301
	push	bc
	pop	hl
	ld	bc, 0
	ld	c, a
	or	a, a
	sbc	hl, bc
	jr	c, BB3_294
	inc	a
	ld	(ix - 108), a
	lea	hl, iy
	add	hl, bc
	ld	(hl), 48
BB3_294:
	lea	hl, iy
	ld	bc, (ix - 48)
	add	hl, bc
	ld	a, (hl)
	cp	a, 46
	ld	l, 1
	jr	z, BB3_300
	cp	a, 57
	ld	h, -1
	ld	c, a
	jr	z, BB3_297
	ld	h, 0
BB3_297:
	ld	a, h
	and	a, 1
	ld	l, a
	inc	c
	bit	0, h
	ld	a, 48
	jr	nz, BB3_299
	ld	a, c
BB3_299:
	ld	iy, (ix - 64)
	ld	bc, (ix - 48)
	add	iy, bc
	ld	(iy), a
	ld	iy, (ix - 64)
BB3_300:
	inc	bc
	ld	(ix - 48), bc
	ld	b, (ix - 45)
	jr	BB3_290
BB3_301:
	ld	hl, 0
BB3_302:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	iy, _.str.2
	jr	z, BB3_304
	push	hl
	pop	iy
BB3_304:
	ld	c, 0
BB3_305:
	ld	de, 0
	ld	e, c
	lea	hl, iy
	add	hl, de
	ld	l, (hl)
	ld	a, l
	or	a, a
	jr	z, BB3_307
	ld	a, l
	ld	hl, (ix - 90)
	add	a, l
	ld	hl, (ix - 64)
	add	hl, de
	ld	(hl), a
	inc	c
	jr	BB3_305
BB3_307:
	ld	(ix - 48), de
	or	a, a
	sbc	hl, hl
	ld	de, (ix - 93)
	ld	(ix - 51), de
	ld	de, (ix - 64)
	ld	(ix - 73), de
	ld	a, (ix - 67)
	ld	(ix - 67), hl
	ld	de, (ix - 87)
	ld	(ix - 54), de
BB3_308:
	ld	d, 0
	ld	e, (ix - 77)
	ld	b, (ix - 45)
BB3_309:
	ld	(ix - 45), a
	ld	a, e
	or	a, a
	ld	c, 1
	ld	(ix - 70), c
	ld	e, d
	jr	z, BB3_319
	ld	a, (ix - 57)
	or	a, a
	ld	(ix - 70), d
	ld	e, d
	ld	c, 1
	ld	hl, 32
	jr	z, BB3_319
	ld	a, (ix - 80)
	cp	a, 3
	ld	c, 1
	ld	(ix - 70), c
	ld	e, d
	ld	hl, 0
	jr	c, BB3_319
	ld	a, (ix - 61)
	or	a, a
	ld	a, -1
	jr	nz, BB3_314
	ld	a, 0
BB3_314:
	ld	hl, (ix - 51)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, -1
	jr	z, BB3_316
	ld	l, 0
BB3_316:
	and	a, l
	and	a, b
	ld	c, a
	xor	a, 1
	ld	e, a
	bit	0, c
	ld	hl, 32
	jr	nz, BB3_318
	ld	hl, 48
BB3_318:
	ld	(ix - 70), d
BB3_319:
	ld	(ix - 77), c
	ld	(ix - 61), hl
	ld	a, (ix - 58)
	add	a, -3
	cp	a, 12
	jr	nc, BB3_321
	ld.sis	hl, 3841
	ld	c, a
	call	__sshru
	ld.sis	bc, 1
	call	__sand
	bit	0, l
	ld	hl, 0
	ld	(ix - 57), hl
	jr	nz, BB3_323
BB3_321:
	ld	hl, (ix - 51)
	ld	bc, (ix - 48)
	or	a, a
	sbc	hl, bc
	ld	(ix - 57), hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_323
	or	a, a
	sbc	hl, hl
	ld	(ix - 57), hl
BB3_323:
	ld	hl, (ix - 83)
	ld	bc, (ix - 48)
	or	a, a
	sbc	hl, bc
	ld	a, (ix - 45)
	or	a, a
	ld	bc, -1
	jr	nz, BB3_325
	ld	bc, 0
BB3_325:
	add	hl, bc
	push	hl
	pop	iy
	ld	bc, -2
	add	iy, bc
	ld	bc, (ix - 67)
	ld	a, c
	or	a, a
	jr	nz, BB3_327
	push	hl
	pop	iy
BB3_327:
	lea	hl, iy
	ld	bc, (ix - 57)
	or	a, a
	sbc	hl, bc
	ld	(ix - 51), hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB3_329
	or	a, a
	sbc	hl, hl
	ld	(ix - 51), hl
BB3_329:
	bit	0, (ix - 70)
	ld	iy, (ix - 39)
	jr	nz, BB3_331
	ld	a, (ix - 84)
	or	a, a
	jr	z, BB3_333
BB3_331:
	ld	bc, (ix - 67)
	ld	a, c
	or	a, a
	jp	z, BB3_346
BB3_332:
	ld	(ix - 67), bc
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix - 42)
	add	hl, de
	ld	(ix - 42), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 67)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	jp	BB3_346
BB3_333:
	bit	0, e
	ld	bc, (ix - 51)
	jr	z, BB3_339
	ld	e, (ix - 45)
	ld	a, e
	or	a, a
	jr	z, BB3_336
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, (ix - 42)
	inc	de
	ld	(ix - 42), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
BB3_336:
	ld	hl, (ix - 67)
	ld	a, l
	or	a, a
	jr	z, BB3_338
	ld	(ix - 67), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
	ld	de, 2
	ld	hl, (ix - 42)
	add	hl, de
	ld	(ix - 42), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 67)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	pop	hl
	pop	hl
BB3_338:
	xor	a, a
	ld	iy, (ix - 39)
	ld	d, a
	ld	bc, (ix - 51)
	jr	BB3_340
BB3_339:
	ld	a, (ix - 45)
BB3_340:
	ld	(ix - 45), a
	ld	(ix - 80), bc
BB3_341:
	ld	hl, (ix - 80)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_343
	ld	hl, (ix - 80)
	dec	hl
	ld	(ix - 80), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 61)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	bc, (ix - 51)
	ld	d, 0
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	jr	BB3_341
BB3_343:
	ld	hl, (ix - 42)
	add	hl, bc
	ld	(ix - 42), hl
	bit	0, (ix - 77)
	jr	z, BB3_345
	ld	bc, (ix - 67)
	ld	a, c
	or	a, a
	ld	hl, -1
	ld	(ix - 51), hl
	jp	nz, BB3_332
	jr	BB3_346
BB3_345:
	scf
	sbc	hl, hl
	ld	(ix - 51), hl
BB3_346:
	ld	a, (ix - 58)
	cp	a, 3
	jr	nz, BB3_351
	or	a, a
	sbc	hl, hl
	ld	(ix - 45), hl
	ld	bc, (ix - 51)
BB3_348:
	ld	hl, (ix - 73)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB3_356
	ld	hl, (ix - 45)
	ld	bc, (ix - 48)
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 51)
	call	pe, __setflag
	jp	p, BB3_356
	ld	hl, (ix - 73)
	ld	de, (ix - 45)
	add	hl, de
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	bc, (ix - 51)
	ld	d, 0
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	ld	hl, (ix - 45)
	inc	hl
	ld	(ix - 45), hl
	jr	BB3_348
BB3_351:
	ld	e, (ix - 45)
	ld	a, e
	or	a, a
	jr	z, BB3_353
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	de, (ix - 42)
	inc	de
	ld	(ix - 42), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	pop	hl
	pop	hl
BB3_353:
	ld	hl, (ix - 42)
	ld	(ix - 45), hl
	ld	iy, (ix - 57)
BB3_354:
	lea	hl, iy
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB3_357
	dec	iy
	ld	(ix - 42), iy
	ld	hl, (ix + 9)
	push	hl
	ld	hl, 48
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	iy, (ix - 42)
	ld	d, 0
	pop	hl
	pop	hl
	jr	BB3_354
BB3_356:
	ld	hl, (ix - 42)
	ld	a, d
	ld	de, (ix - 45)
	add	hl, de
	ld	d, a
	ld	(ix - 42), hl
	jp	BB3_366
BB3_357:
	ld	a, (ix - 58)
	cp	a, 5
	ld	iy, (ix - 39)
	jp	nz, BB3_361
	ld	hl, (ix - 48)
	ld	bc, (ix - 57)
	add	hl, bc
	ld	(ix - 42), hl
BB3_359:
	ld	hl, (ix - 48)
	dec	hl
	ld	(ix - 48), hl
	ld	hl, (ix - 48)
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jp	z, BB3_364
	ld	hl, (ix - 36)
	ld	de, (ix - 33)
	ld	bc, (ix - 30)
	ld	iy, (ix - 48)
	push	iy
	call	__llshru
	pop	de
	ld	bc, 1
	call	__iand
	ld	de, 48
	add	hl, de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	jp	BB3_359
BB3_361:
	ld	hl, (ix - 57)
	ld	bc, (ix - 45)
	add	hl, bc
	ld	(ix - 42), hl
BB3_362:
	ld	hl, (ix - 48)
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB3_365
	ld	iy, (ix - 73)
	ld	de, (ix - 48)
	add	iy, de
	dec	de
	ld	(ix - 48), de
	ld	a, (iy - 1)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	ld	de, (ix - 42)
	inc	de
	ld	(ix - 42), de
	ld	de, (ix + 9)
	push	de
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	d, 0
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	jr	BB3_362
BB3_364:
	ld	hl, (ix - 42)
	ld	bc, (ix - 45)
	add	hl, bc
	ld	(ix - 42), hl
BB3_365:
	ld	bc, (ix - 51)
BB3_366:
	ld	a, (ix - 84)
	or	a, a
	jp	z, BB3_1
	bit	0, (ix - 70)
	jp	nz, BB3_1
BB3_368:
	push	bc
	pop	hl
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB3_76
	dec	bc
	ld	(ix - 51), bc
	ld	hl, (ix - 42)
	inc	hl
	ld	(ix - 42), hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 61)
	push	hl
	ld	hl, (ix + 6)
	call	__indcallhl
	ld	bc, (ix - 51)
	ld	iy, (ix - 39)
	pop	hl
	pop	hl
	jr	BB3_368
BB3_370:
	or	a, a
	sbc	hl, hl
	ld	l, (ix - 108)
	ld	(ix - 48), hl
	lea	hl, iy
	ld	de, (ix - 93)
	ld	(ix - 51), de
	ld	(ix - 73), hl
	ld	a, (ix - 67)
	sbc	hl, hl
	ld	(ix - 67), hl
	ld	de, (ix - 87)
	ld	(ix - 54), de
	ld	d, h
	jp	BB3_234
BB3_371:
	ld	hl, (ix - 42)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI3_0
JTI3_0:
	dl	BB3_71
	dl	BB3_88
	dl	BB3_75
	dl	BB3_75
	dl	BB3_90
	dl	BB3_94
	dl	BB3_98
	private	JTI3_1
JTI3_1:
	dl	BB3_68
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_72
	dl	BB3_89
	dl	BB3_164
	dl	BB3_165
	dl	BB3_91
	dl	BB3_95
	dl	BB3_99
	dl	BB3_75
	dl	BB3_165
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_75
	dl	BB3_166
	dl	BB3_171
	dl	BB3_167
	dl	BB3_75
	dl	BB3_75
	dl	BB3_168
	dl	BB3_75
	dl	BB3_169
	dl	BB3_75
	dl	BB3_75
	dl	BB3_69
	private	JTI3_2
JTI3_2:
	dl	BB3_85
	dl	BB3_115
	dl	BB3_106
	dl	BB3_116
	dl	BB3_113
	dl	BB3_113
	dl	BB3_113
	dl	BB3_113
	dl	BB3_118
	dl	BB3_119
	dl	BB3_122
	dl	BB3_122
	dl	BB3_122
	dl	BB3_122
	private	JTI3_3
JTI3_3:
	dl	BB3_129
	dl	BB3_267
	dl	BB3_82
	dl	BB3_269
	dl	BB3_271
	dl	BB3_272
	dl	BB3_275
	dl	BB3_129
	dl	BB3_129
	private	JTI3_4
JTI3_4:
	dl	BB3_209
	dl	BB3_125
	dl	BB3_209
	dl	BB3_204
	dl	BB3_206
	dl	BB3_207
	dl	BB3_208
	dl	BB3_209
	dl	BB3_209
	private	JTI3_5
JTI3_5:
	dl	BB3_248
	dl	BB3_127
	dl	BB3_257
	dl	BB3_244
	dl	BB3_245
	dl	BB3_246
	dl	BB3_246
	dl	BB3_248
	dl	BB3_248

	section	.text,"ax",@progbits
	public	__snprintf_c
__snprintf_c:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	lea	hl, ix + 15
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	bc
	push	de
	push	iy
	call	__vsnprintf_c
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vsprintf_c
__vsprintf_c:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	hl, 8388607
	push	bc
	push	de
	push	hl
	push	iy
	call	__vsnprintf_c
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__sprintf_c
__sprintf_c:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, 8388607
	lea	hl, ix + 12
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	de
	push	bc
	push	iy
	call	__vsnprintf_c
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vasprintf_c
__vasprintf_c:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	bc, (ix + 9)
	ld	de, (ix + 12)
	ld	iy, 0
	ld	(hl), iy
	push	de
	push	bc
	or	a, a
	sbc	hl, hl
	push	hl
	push	iy
	call	__vsnprintf_c
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	p, BB7_2
	push	bc
	pop	de
	jr	BB7_6
BB7_2:
	inc	bc
	ld	(ix - 3), bc
	push	bc
	call	_malloc
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, -1
	jr	z, BB7_6
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 3), bc
	push	bc
	call	__vsnprintf_c
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	p, BB7_5
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 3), de
	call	_free
	ld	de, (ix - 3)
	pop	hl
	jr	BB7_6
BB7_5:
	ld	hl, (ix + 6)
	ld	bc, (ix - 3)
	ld	(hl), bc
BB7_6:
	ex	de, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__asprintf_c
__asprintf_c:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	lea	bc, ix + 12
	ld	(ix - 3), bc
	ld	bc, (ix - 3)
	push	bc
	push	de
	push	hl
	call	__vasprintf_c
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vfprintf_c
__vfprintf_c:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	ld	hl, _npf_fputc_std
	push	bc
	push	de
	push	iy
	push	hl
	call	_npf_vpprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_fputc_std
_npf_fputc_std:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	(ix + 6), hl
	ld	(ix + 9), de
	pop	ix
	jp	_fputc
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__fprintf_c
__fprintf_c:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, _npf_fputc_std
	lea	hl, ix + 12
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	de
	push	iy
	push	bc
	call	_npf_vpprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__vprintf_c
__vprintf_c:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, _npf_putc_std
	ld	hl, 0
	push	de
	push	iy
	push	hl
	push	bc
	call	_npf_vpprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_putc_std
_npf_putc_std:
	call	__frameset0
	ld	a, (ix + 6)
	ld	(ix + 6), a
	pop	ix
	jp	_outchar
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	__printf_c
__printf_c:
	ld	hl, -3
	call	__frameset
	ld	de, (ix + 6)
	ld	iy, _npf_putc_std
	ld	bc, 0
	lea	hl, ix + 9
	ld	(ix - 3), hl
	ld	hl, (ix - 3)
	push	hl
	push	de
	push	bc
	push	iy
	call	_npf_vpprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_npf_utoa_rev
_npf_utoa_rev:
	ld	hl, -28
	call	__frameset
	ld	iy, (ix + 6)
	ld	hl, (ix + 12)
	ld	(ix - 3), hl
	ld	hl, (ix + 15)
	ld	(ix - 9), hl
	ld	de, 55
	xor	a, a
	sbc	hl, hl
	ld	l, (ix + 21)
	add	hl, de
	ld	bc, (ix + 9)
	ld	(ix - 28), hl
BB15_1:
	lea	hl, iy
	ld	(ix - 13), hl
	ld	(ix - 10), a
	ld	iy, 0
	push	af
	ld	a, (ix + 18)
	ld	iyl, a
	pop	af
	ld	de, 0
	push	de
	push	de
	push	iy
	ld	(ix - 16), bc
	push	bc
	pop	de
	ld	bc, (ix - 3)
	call	__lldivu
	ld	(ix - 6), hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	(ix - 19), iy
	push	iy
	ld	hl, (ix - 6)
	ld	(ix - 25), de
	ld	(ix - 22), bc
	call	__llmulu
	ld	iy, (ix - 13)
	push	hl
	pop	de
	pop	hl
	pop	hl
	pop	hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 10
	or	a, a
	sbc	hl, bc
	ld	hl, 48
	jr	c, BB15_3
	ld	hl, (ix - 28)
BB15_3:
	ld	a, l
	add	a, e
	ld	hl, (ix - 9)
	ld	(hl), a
	inc	hl
	ld	(ix - 9), hl
	ld	a, (ix - 10)
	inc	a
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	ld	hl, (ix - 19)
	push	hl
	lea	hl, iy
	ld	de, (ix - 16)
	ld	bc, (ix - 3)
	call	__llcmpu
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix - 6)
	ld	bc, (ix - 25)
	ld	hl, (ix - 22)
	ld	(ix - 3), hl
	jp	nc, BB15_1
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"NAN", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"FNI", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"RRE", 0

	ident	"clang version 15.0.7 (https://github.com/CE-Programming/llvm-project db91fd729cd188daf925aaf5043a6ca0d3660655)"
	extern	_outchar
	extern	_malloc
	extern	__llneg
	extern	__signbitl
	extern	__llcmpzero
	extern	__sand
	extern	__ftod
	extern	__ishl
	extern	__Unwind_SjLj_Register
	extern	__sshru
	extern	__setflag
	extern	__llshru
	extern	__iand
	extern	__lladd
	extern	__ixor
	extern	_fputc
	extern	__llctlz
	extern	__llmulu
	extern	_free
	extern	__frameset
	extern	__indcallhl
	extern	__ishrs
	extern	__ishru
	extern	__llcmps
	extern	__llcmpu
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	__lldivu
	extern	__llshl
	extern	__iszerol
	extern	__frameset0
	extern	__lland
